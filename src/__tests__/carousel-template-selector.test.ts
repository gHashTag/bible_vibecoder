/**
 * üß™ –¢–µ—Å—Ç—ã –¥–ª—è —É–ª—É—á—à–µ–Ω–Ω–æ–π –∫–∞—Ä—É—Å–µ–ª—å–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –≤—ã–±–æ—Ä–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
 */

import { describe, test, expect } from 'bun:test';
import {
  InstagramCanvasService,
  ColorTemplate,
} from '../services/instagram-canvas.service';

describe('üé® Enhanced Carousel Template Selector', () => {
  test('üìã –ü—Ä–µ–≤—å—é –¥–æ–ª–∂–Ω—ã —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–π VibeCoding –∫–æ–Ω—Ç–µ–Ω—Ç', () => {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –µ—Å—Ç—å –ø—Ä–µ–¥—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ VibeCoding —Ü–∏—Ç–∞—Ç—ã –∏ –ø—Ä–∏–º–µ—Ä—ã
    const vibeCodingQuotes = [
      '–ö–æ–¥ - —ç—Ç–æ –ø–æ—ç–∑–∏—è –ª–æ–≥–∏–∫–∏',
      '–í –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∂–∏–≤–µ—Ç –¥—É—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞',
      '–ß–∏—Å—Ç—ã–π –∫–æ–¥ - –ø—É—Ç—å –∫ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—é',
      '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ - –º–µ–¥–∏—Ç–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞',
    ];

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ü–∏—Ç–∞—Ç
    expect(vibeCodingQuotes.length).toBeGreaterThan(0);
    vibeCodingQuotes.forEach(quote => {
      expect(quote.length).toBeGreaterThan(10);
      expect(typeof quote).toBe('string');
    });
  });

  test('üé® –¶–≤–µ—Ç–∞ —Ç–µ–∫—Å—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –¥–ª—è Galaxy Spiral Blur —Ç–µ–º–ø–ª–µ–π—Ç–∞', () => {
    const templates = InstagramCanvasService.getColorTemplates();

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Galaxy Spiral Blur —Ç–µ–º–ø–ª–µ–π—Ç –∏–º–µ–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    expect(templates[ColorTemplate.GALAXY_SPIRAL_BLUR]).toBeTruthy();

    const galaxyTemplate = templates[ColorTemplate.GALAXY_SPIRAL_BLUR];
    expect(galaxyTemplate.name).toBe('üåå Galaxy Spiral Blur');
    expect(galaxyTemplate.background).toBe('bg-image-galaxy-spiral'); // –§–∞–∫—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
    expect(galaxyTemplate.accent).toBe('rgba(255, 255, 255, 0.3)');
    expect(galaxyTemplate.cardBackground).toBe('rgba(0, 0, 0, 0.4)');
  });

  test('üîÑ Galaxy Spiral Blur –¥–æ–ª–∂–µ–Ω –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –±–∞–∑–æ–≤—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é', () => {
    const templates = InstagramCanvasService.getColorTemplates();
    const templateKeys = Object.keys(templates);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É –Ω–∞—Å –µ—Å—Ç—å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —à–∞–±–ª–æ–Ω
    expect(templateKeys.length).toBe(1);
    expect(templateKeys[0]).toBe(ColorTemplate.GALAXY_SPIRAL_BLUR);

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–∞–≤–∏–≥–∞—Ü–∏—é –¥–ª—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    let currentIndex = 0;

    // –ü—Ä–∏ –æ–¥–Ω–æ–º —à–∞–±–ª–æ–Ω–µ –Ω–∞–≤–∏–≥–∞—Ü–∏—è –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ
    currentIndex = (currentIndex + 1) % templateKeys.length;
    expect(currentIndex).toBe(0);

    // –ù–∞–∑–∞–¥ —Ç–æ–∂–µ –æ—Å—Ç–∞–µ—Ç—Å—è –Ω–∞ —Ç–æ–º –∂–µ –º–µ—Å—Ç–µ
    currentIndex =
      currentIndex === 0 ? templateKeys.length - 1 : currentIndex - 1;
    expect(currentIndex).toBe(0);
  });

  test('üì± Callback –¥–∞–Ω–Ω—ã–µ –¥–æ–ª–∂–Ω—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—Ç—å –∫–∞—Ä—É—Å–µ–ª—å–Ω—É—é –Ω–∞–≤–∏–≥–∞—Ü–∏—é', () => {
    const templateKeys = Object.keys(
      InstagramCanvasService.getColorTemplates()
    );
    const topicKey = 'test_topic_123';

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ñ–æ—Ä–º–∞—Ç callback –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
    const nextCallback = `nav:next:${topicKey}`;
    const prevCallback = `nav:prev:${topicKey}`;
    const selectCallback = `select:${templateKeys[0]}:${topicKey}`;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç
    expect(nextCallback.split(':').length).toBe(3);
    expect(prevCallback.split(':').length).toBe(3);
    expect(selectCallback.split(':').length).toBe(3);

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞—Ä—Å–∏–Ω–≥
    const [action1, direction, topic1] = nextCallback.split(':');
    expect(action1).toBe('nav');
    expect(direction).toBe('next');
    expect(topic1).toBe(topicKey);

    const [action2, templateKey, topic2] = selectCallback.split(':');
    expect(action2).toBe('select');
    expect(templateKeys).toContain(templateKey);
    expect(topic2).toBe(topicKey);
  });

  test('üéØ –°–æ—Å—Ç–æ—è–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏ –¥–æ–ª–∂–Ω–æ –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ', () => {
    interface CarouselState {
      currentIndex: number;
      topicKey: string;
      topic: string;
      messageId: number;
    }

    const mockState: CarouselState = {
      currentIndex: 0,
      topicKey: 'test_123',
      topic: '—Ç–µ—Å—Ç–æ–≤–∞—è —Ç–µ–º–∞',
      messageId: 456,
    };

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—é —Å–æ—Å—Ç–æ—è–Ω–∏—è
    expect(mockState.currentIndex).toBe(0);
    expect(mockState.topicKey).toBe('test_123');
    expect(mockState.topic).toBe('—Ç–µ—Å—Ç–æ–≤–∞—è —Ç–µ–º–∞');
    expect(mockState.messageId).toBe(456);

    // –°–∏–º—É–ª–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –¥–ª—è –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞
    const templateCount = Object.keys(
      InstagramCanvasService.getColorTemplates()
    ).length;
    expect(templateCount).toBe(1);

    const newIndex = (mockState.currentIndex + 1) % templateCount;
    expect(newIndex).toBe(0); // –ü—Ä–∏ –æ–¥–Ω–æ–º —à–∞–±–ª–æ–Ω–µ –∏–Ω–¥–µ–∫—Å –≤—Å–µ–≥–¥–∞ 0
  });
});
