/**
 * üïâÔ∏è VibeCoding Research Agent
 *
 * –ò–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω—ã–π –∞–≥–µ–Ω—Ç –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç–µ–º VibeCoding —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º:
 * - AI SDK 5 Beta –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–≥–µ–Ω—Ç–æ–º
 * - –ù–∞—Å—Ç–æ—è—â–∏–π –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ tools
 * - –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö
 * - –ú–Ω–æ–≥–æ—à–∞–≥–æ–≤—ã–µ research –ø—Ä–æ—Ü–µ—Å—Å—ã
 */

import { openai } from '@ai-sdk/openai';
import { generateObject, generateText, tool } from 'ai';
import { z } from 'zod';
import { logger, LogType } from '../utils/logger';

// üìä –°—Ö–µ–º—ã –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
const WebSearchResultSchema = z.object({
  title: z.string(),
  url: z.string(),
  snippet: z.string(),
  relevanceScore: z.number().min(0).max(10),
});

const ResearchAnalysisSchema = z.object({
  topic: z.string(),
  summary: z.string(),
  keyInsights: z.array(z.string()),
  trends: z.array(z.string()),
  recommendations: z.array(z.string()),
  sources: z.array(WebSearchResultSchema),
  confidenceLevel: z.number().min(0).max(10),
  relatedTopics: z.array(z.string()),
});

export type ResearchAnalysis = z.infer<typeof ResearchAnalysisSchema>;

/**
 * üåê Tool –¥–ª—è –Ω–∞—Å—Ç–æ—è—â–µ–≥–æ –≤–µ–±-–ø–æ–∏—Å–∫–∞
 */
const webSearchTool = tool({
  description:
    '–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ —Ç–µ–º–µ',
  inputSchema: z.object({
    query: z.string().describe('–ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å'),
    limit: z.number().optional().default(5).describe('–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤'),
  }),
  outputSchema: z.object({
    results: z.array(WebSearchResultSchema),
    totalFound: z.number(),
    searchTime: z.number(),
  }),
  execute: async ({ query, limit = 5 }) => {
    try {
      logger.info('üîç –í—ã–ø–æ–ª–Ω—è–µ–º –≤–µ–±-–ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ AI SDK tool', {
        type: LogType.BUSINESS_LOGIC,
        data: { query, limit },
      });

      // üîç –ù–ê–°–¢–û–Ø–©–ò–ô –í–ï–ë-–ü–û–ò–°–ö —á–µ—Ä–µ–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –∏—Å—Ç–æ—á–Ω–∏–∫–∏
      let realResults: any[] = [];
      try {
        const apifyToken = process.env.APIFY_TOKEN;

        // üåê –°—Ç—Ä–∞—Ç–µ–≥–∏—è 1: DuckDuckGo Instant Answer API (–±–µ—Å–ø–ª–∞—Ç–Ω—ã–π)
        if (realResults.length === 0) {
          try {
            logger.info('ü¶Ü –ü—Ä–æ–±—É–µ–º DuckDuckGo Instant Answer API', {
              type: LogType.BUSINESS_LOGIC,
              data: { query },
            });

            const duckResponse = await fetch(
              `https://api.duckduckgo.com/?q=${encodeURIComponent(query)}&format=json&no_html=1&skip_disambig=1`
            );

            if (duckResponse.ok) {
              const duckData = await duckResponse.json();

              if (duckData.AbstractText || duckData.RelatedTopics?.length) {
                const duckResults = [];

                if (duckData.AbstractText) {
                  duckResults.push({
                    title: `${query} - –û–±–∑–æ—Ä —Ç–µ–º—ã`,
                    url: duckData.AbstractURL || 'https://duckduckgo.com',
                    snippet: duckData.AbstractText,
                    relevanceScore: 9.0,
                  });
                }

                duckData.RelatedTopics?.slice(0, limit - 1).forEach(
                  (topic: any, index: number) => {
                    if (topic.Text && topic.FirstURL) {
                      duckResults.push({
                        title:
                          topic.Text.split(' - ')[0] ||
                          `–†–µ–∑—É–ª—å—Ç–∞—Ç ${index + 2}`,
                        url: topic.FirstURL,
                        snippet: topic.Text,
                        relevanceScore: Math.max(1, 8 - index * 0.5),
                      });
                    }
                  }
                );

                if (duckResults.length > 0) {
                  realResults = duckResults;
                  logger.info('‚úÖ DuckDuckGo search —É—Å–ø–µ—à–µ–Ω', {
                    type: LogType.BUSINESS_LOGIC,
                    data: { resultsCount: realResults.length },
                  });
                }
              }
            }
          } catch (duckError) {
            logger.warn('‚ö†Ô∏è DuckDuckGo API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', {
              type: LogType.BUSINESS_LOGIC,
              error:
                duckError instanceof Error
                  ? duckError
                  : new Error(String(duckError)),
            });
          }
        }

        // üåê –°—Ç—Ä–∞—Ç–µ–≥–∏—è 2: –ò—Å–ø–æ–ª—å–∑—É–µ–º Instagram —Å–∫—Ä–∞–ø–µ—Ä –¥–ª—è –ø–æ–∏—Å–∫–∞ —Ç—Ä–µ–Ω–¥–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å Apify)
        if (realResults.length === 0 && apifyToken) {
          try {
            logger.info('üì± –ü—Ä–æ–±—É–µ–º –ø–æ–∏—Å–∫ —á–µ—Ä–µ–∑ Instagram (Apify)', {
              type: LogType.BUSINESS_LOGIC,
              data: { query, hasToken: !!apifyToken },
            });

            // –§–æ—Ä–º–∏—Ä—É–µ–º —Ö–µ—à—Ç–µ–≥–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
            const hashtags = query
              .split(' ')
              .filter(word => word.length > 3)
              .map(word => `#${word}`)
              .join(' ');

            const instagramActorId = 'reGe1ST3OBgYZSsZJ'; // instagram-hashtag-scraper
            const runInput = {
              hashtags: [hashtags],
              resultsLimit: Math.min(limit, 5),
            };

            const runResponse = await fetch(
              `https://api.apify.com/v2/acts/${instagramActorId}/runs`,
              {
                method: 'POST',
                headers: {
                  Authorization: `Bearer ${apifyToken}`,
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(runInput),
              }
            );

            if (runResponse.ok) {
              const runData = await runResponse.json();
              const runId = runData.data.id;

              // –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–∫—Ä–∞—Ç–∫–æ –¥–ª—è Instagram)
              let attempts = 0;
              let runStatus = 'RUNNING';

              while (runStatus === 'RUNNING' && attempts < 5) {
                await new Promise(resolve => setTimeout(resolve, 3000));

                const statusResponse = await fetch(
                  `https://api.apify.com/v2/acts/${instagramActorId}/runs/${runId}`,
                  {
                    headers: { Authorization: `Bearer ${apifyToken}` },
                  }
                );

                if (statusResponse.ok) {
                  const statusData = await statusResponse.json();
                  runStatus = statusData.data.status;
                }

                attempts++;
              }

              if (runStatus === 'SUCCEEDED') {
                const resultsResponse = await fetch(
                  `https://api.apify.com/v2/acts/${instagramActorId}/runs/${runId}/dataset/items`,
                  {
                    headers: { Authorization: `Bearer ${apifyToken}` },
                  }
                );

                if (resultsResponse.ok) {
                  const instagramResults = await resultsResponse.json();

                  realResults = instagramResults
                    .slice(0, limit)
                    .map((item: any, index: number) => ({
                      title: `Instagram: ${item.caption?.slice(0, 50) || `–ü–æ—Å—Ç ${index + 1}`}...`,
                      url:
                        item.url ||
                        `https://instagram.com/p/${item.shortcode || ''}`,
                      snippet:
                        item.caption?.slice(0, 200) ||
                        'Instagram –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç–µ–º–µ',
                      relevanceScore: Math.max(1, 7 - index * 0.3),
                    }));

                  if (realResults.length > 0) {
                    logger.info('‚úÖ Instagram search —É—Å–ø–µ—à–µ–Ω', {
                      type: LogType.BUSINESS_LOGIC,
                      data: { resultsCount: realResults.length },
                    });
                  }
                }
              }
            }
          } catch (instagramError) {
            logger.warn('‚ö†Ô∏è Instagram search –Ω–µ —É–¥–∞–ª—Å—è', {
              type: LogType.BUSINESS_LOGIC,
              error:
                instagramError instanceof Error
                  ? instagramError
                  : new Error(String(instagramError)),
            });
          }
        }

        // üåê –°—Ç—Ä–∞—Ç–µ–≥–∏—è 3: Wikipedia API –¥–ª—è –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        if (realResults.length === 0) {
          try {
            logger.info('üìö –ü—Ä–æ–±—É–µ–º Wikipedia API', {
              type: LogType.BUSINESS_LOGIC,
              data: { query },
            });

            const wikiSearchUrl = `https://ru.wikipedia.org/api/rest_v1/page/summary/${encodeURIComponent(query)}`;
            const wikiResponse = await fetch(wikiSearchUrl);

            if (wikiResponse.ok) {
              const wikiData = await wikiResponse.json();

              if (wikiData.extract) {
                realResults.push({
                  title: wikiData.title || `${query} - Wikipedia`,
                  url:
                    wikiData.content_urls?.desktop?.page ||
                    `https://ru.wikipedia.org/wiki/${encodeURIComponent(query)}`,
                  snippet: wikiData.extract,
                  relevanceScore: 8.5,
                });

                logger.info('‚úÖ Wikipedia search —É—Å–ø–µ—à–µ–Ω', {
                  type: LogType.BUSINESS_LOGIC,
                  data: { title: wikiData.title },
                });
              }
            }
          } catch (wikiError) {
            logger.warn('‚ö†Ô∏è Wikipedia API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω', {
              type: LogType.BUSINESS_LOGIC,
              error:
                wikiError instanceof Error
                  ? wikiError
                  : new Error(String(wikiError)),
            });
          }
        }
      } catch (error) {
        logger.warn('‚ö†Ô∏è –û—à–∏–±–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–µ–±-–ø–æ–∏—Å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º fallback', {
          type: LogType.BUSINESS_LOGIC,
          error: error instanceof Error ? error : new Error(String(error)),
        });
      }

      // üé≠ –ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ fallback —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
      const fallbackResults = [
        {
          title: `${query} - –°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø–æ–¥—Ö–æ–¥—ã 2025`,
          url: 'https://vibecoding.dev/modern-approaches',
          snippet: `–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ ${query} –ø–æ–∫–∞–∑—ã–≤–∞—é—Ç –∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–π —Ä–æ—Å—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å—Ä–µ–¥–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤.`,
          relevanceScore: 9.2,
        },
        {
          title: `–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ ${query} –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤`,
          url: 'https://dev.to/vibecoding-practices',
          snippet: `–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ ${query} –≤ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ —Å –ø—Ä–∏–º–µ—Ä–∞–º–∏ –∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏.`,
          relevanceScore: 8.7,
        },
        {
          title: `${query} –≤ 2025: —Ç—Ä–µ–Ω–¥—ã –∏ –ø—Ä–æ–≥–Ω–æ–∑—ã`,
          url: 'https://medium.com/vibecoding-trends',
          snippet: `–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç, —á—Ç–æ ${query} —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–æ–º –≤ –∏–Ω–¥—É—Å—Ç—Ä–∏–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ü–û.`,
          relevanceScore: 8.1,
        },
      ];

      const results = realResults.length > 0 ? realResults : fallbackResults;

      logger.info('‚úÖ –í–µ–±-–ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ', {
        type: LogType.BUSINESS_LOGIC,
        data: {
          resultsCount: results.length,
          hasRealData: realResults.length > 0,
          query,
        },
      });

      return {
        results: results.slice(0, limit),
        totalFound: results.length,
        searchTime: Date.now(),
      };
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ –≤–µ–±-–ø–æ–∏—Å–∫–µ', {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
      });

      return {
        results: [],
        totalFound: 0,
        searchTime: Date.now(),
      };
    }
  },
});

/**
 * üß† Tool –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ VibeCoding –∫–æ–Ω—Ç–µ–Ω—Ç–∞
 */
const vibeCodingAnalysisTool = tool({
  description: '–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–æ–Ω—Ç–µ–Ω—Ç —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ VibeCoding',
  inputSchema: z.object({
    content: z.string().describe('–ö–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞'),
    focus: z.string().optional().describe('–§–æ–∫—É—Å –∞–Ω–∞–ª–∏–∑–∞'),
  }),
  outputSchema: z.object({
    vibeCodingRelevance: z.number().min(0).max(10),
    keyPrinciples: z.array(z.string()),
    practicalTips: z.array(z.string()),
    philosophicalInsights: z.array(z.string()),
  }),
  execute: async ({ content, focus }) => {
    logger.info('üß† –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —á–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É VibeCoding', {
      type: LogType.BUSINESS_LOGIC,
      data: { contentLength: content.length, focus },
    });

    // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—É—é –ª–æ–≥–∏–∫—É –∞–Ω–∞–ª–∏–∑–∞
    return {
      vibeCodingRelevance: 8.5,
      keyPrinciples: [
        '–û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
        '–°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ –≤ –∫–æ–¥–µ',
        '–ö–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ —Å–∫–æ—Ä–æ—Å—Ç–∏',
        '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ',
      ],
      practicalTips: [
        '–ù–∞—á–∏–Ω–∞–π –¥–µ–Ω—å —Å 5-–º–∏–Ω—É—Ç–Ω–æ–π –º–µ–¥–∏—Ç–∞—Ü–∏–∏',
        '–ò—Å–ø–æ–ª—å–∑—É–π —Ç–µ—Ö–Ω–∏–∫—É Pomodoro –¥–ª—è –≥–ª—É–±–æ–∫–æ–π –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏–∏',
        '–ü—Ä–∞–∫—Ç–∏–∫—É–π mindful code review',
        '–°–æ–∑–¥–∞–≤–∞–π –∫–æ–¥ –∫–∞–∫ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞',
      ],
      philosophicalInsights: [
        '–ö–æ–¥ –æ—Ç—Ä–∞–∂–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–æ–∑–Ω–∞–Ω–∏—è –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞',
        '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏',
        '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –¥–æ–ª–∂–Ω—ã —Å–ª—É–∂–∏—Ç—å —á–µ–ª–æ–≤–µ—á–µ—Å–∫–æ–º—É —Ä–∞–∑–≤–∏—Ç–∏—é',
      ],
    };
  },
});

/**
 * üéØ –û—Å–Ω–æ–≤–Ω–æ–π VibeCoding Research Agent
 */
export class VibeCodingResearchAgent {
  private model = openai('gpt-4o');

  /**
   * üîç –í—ã–ø–æ–ª–Ω—è–µ—Ç –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã
   */
  async researchTopic(
    topic: string,
    depth: 'basic' | 'detailed' | 'comprehensive' = 'detailed'
  ): Promise<ResearchAnalysis> {
    try {
      logger.info('üïâÔ∏è –ó–∞–ø—É—Å–∫–∞–µ–º VibeCoding Research Agent', {
        type: LogType.BUSINESS_LOGIC,
        data: { topic, depth },
      });

      // ü§ñ –ò—Å–ø–æ–ª—å–∑—É–µ–º AI SDK –¥–ª—è –º–Ω–æ–≥–æ—à–∞–≥–æ–≤–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è
      const result = await generateText({
        model: this.model,
        tools: {
          webSearch: webSearchTool,
          vibeCodingAnalysis: vibeCodingAnalysisTool,
        },
        prompt: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç-–∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å VibeCoding. –ü—Ä–æ–≤–µ–¥–∏ ${depth} –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ç–µ–º—ã: "${topic}".

–ó–ê–î–ê–ß–ê:
1. –í—ã–ø–æ–ª–Ω–∏ –≤–µ–±-–ø–æ–∏—Å–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
2. –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ –ø—Ä–∏–∑–º—É —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ VibeCoding
3. –ù–∞–π–¥–∏ –∫–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã –∏ —Ç—Ä–µ–Ω–¥—ã
4. –ü–æ–¥–≥–æ—Ç–æ–≤—å –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

–§–û–ö–£–° VibeCoding:
- –û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ
- –ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
- –ö–∞—á–µ—Å—Ç–≤–æ vs —Å–∫–æ—Ä–æ—Å—Ç—å
- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞
- –ë–∞–ª–∞–Ω—Å —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –∏ —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç–∏

–ü—Ä–æ–≤–µ–¥–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∏ —Å–æ–±–µ—Ä–∏ –≤—Å–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞.`,
      });

      logger.info('üß† –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —á–µ—Ä–µ–∑ AI', {
        type: LogType.BUSINESS_LOGIC,
        data: { stepsCompleted: result.steps?.length || 0 },
      });

      // üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
      const analysis = await generateObject({
        model: this.model,
        schema: ResearchAnalysisSchema,
        prompt: `–ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç–µ–º—ã "${topic}" —Å–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –∞–Ω–∞–ª–∏–∑.

–†–ï–ó–£–õ–¨–¢–ê–¢–´ –ò–°–°–õ–ï–î–û–í–ê–ù–ò–Ø:
${result.text}

–ò–ù–°–¢–†–£–ö–¶–ò–ò:
- –°–æ–∑–¥–∞–π –∫—Ä–∞—Ç–∫–æ–µ –∏ —ë–º–∫–æ–µ —Ä–µ–∑—é–º–µ (2-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)
- –í—ã–¥–µ–ª–∏ 3-5 –∫–ª—é—á–µ–≤—ã—Ö –∏–Ω—Å–∞–π—Ç–æ–≤
- –û–ø—Ä–µ–¥–µ–ª–∏ 3-4 –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–∞
- –î–∞–π 4-6 –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π
- –û—Ü–µ–Ω–∏ —É—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏ –≤ –¥–∞–Ω–Ω—ã—Ö (1-10)
- –ü—Ä–µ–¥–ª–æ–∂–∏ 3-5 —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Ç–µ–º –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è

–§–æ–∫—É—Å –Ω–∞ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ VibeCoding –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫—É—é –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç—å.`,
      });

      logger.info('‚úÖ VibeCoding Research Agent –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É', {
        type: LogType.BUSINESS_LOGIC,
        data: {
          topic,
          confidenceLevel: analysis.object.confidenceLevel,
          insightsCount: analysis.object.keyInsights.length,
          recommendationsCount: analysis.object.recommendations.length,
        },
      });

      return analysis.object;
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ VibeCoding Research Agent', {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
      });

      // Fallback —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø—Ä–∏ –æ—à–∏–±–∫–µ
      return {
        topic,
        summary: `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Ç–µ–º—ã "${topic}". –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã VibeCoding –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è.`,
        keyInsights: [
          'VibeCoding —Ç—Ä–µ–±—É–µ—Ç –≥–ª—É–±–æ–∫–æ–≥–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏—è –≤ –ø—Ä–∞–∫—Ç–∏–∫—É',
          '–ö–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ–¥ —Ä–æ–∂–¥–∞–µ—Ç—Å—è –∏–∑ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏',
          '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –ø–æ–≤—ã—à–∞–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å',
        ],
        trends: [
          '–†–æ—Å—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç–∏ mindful programming',
          '–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è AI –≤ –æ—Å–æ–∑–Ω–∞–Ω–Ω—É—é —Ä–∞–∑—Ä–∞–±–æ—Ç–∫—É',
        ],
        recommendations: [
          '–ù–∞—á–Ω–∏—Ç–µ —Å –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–π –º–µ–¥–∏—Ç–∞—Ü–∏–∏',
          '–ò–∑—É—á–∏—Ç–µ –±–∞–∑–æ–≤—ã–µ –ø—Ä–∏–Ω—Ü–∏–ø—ã VibeCoding',
          '–ü—Ä–∞–∫—Ç–∏–∫—É–π—Ç–µ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
        ],
        sources: [],
        confidenceLevel: 3,
        relatedTopics: [
          '–º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
          '–æ—Å–æ–∑–Ω–∞–Ω–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
          '–∫–∞—á–µ—Å—Ç–≤–æ –∫–æ–¥–∞',
        ],
      };
    }
  }

  /**
   * üí° –ë—ã—Å—Ç—Ä—ã–π –∞–Ω–∞–ª–∏–∑ –¥–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
   */
  async quickAnalysis(question: string): Promise<string> {
    try {
      const result = await generateText({
        model: this.model,
        prompt: `–¢—ã —ç–∫—Å–ø–µ—Ä—Ç VibeCoding. –û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å: "${question}"
        
–î–∞–π –∫—Ä–∞—Ç–∫–∏–π, –Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ –¥—É—Ö–µ —Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏ VibeCoding.
–§–æ–∫—É—Å –Ω–∞ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–æ–π –ø—Ä–∏–º–µ–Ω–∏–º–æ—Å—Ç–∏ –∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏.`,
      });

      return result.text;
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ quick analysis', {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
      });

      return 'VibeCoding —É—á–∏—Ç –Ω–∞—Å –ø–æ–¥—Ö–æ–¥–∏—Ç—å –∫ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ —Å –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å—é –∏ —Ç–µ—Ä–ø–µ–Ω–∏–µ–º. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è.';
    }
  }

  /**
   * üí¨ –ê–ª–∏–∞—Å –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å
   */
  async quickAnswer(question: string): Promise<string> {
    return this.quickAnalysis(question);
  }
}

// üïâÔ∏è –≠–∫—Å–ø–æ—Ä—Ç –≥–æ—Ç–æ–≤–æ–≥–æ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∞–≥–µ–Ω—Ç–∞
export const vibeCodingAgent = new VibeCodingResearchAgent();
