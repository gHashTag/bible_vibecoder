/**
 * Inngest Function: Generate Instagram Carousel
 *
 * –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Instagram –∫–∞—Ä—É—Å–µ–ª–∏ –∏–∑ VIBECODING –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.
 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–ª–Ω—ã–π workflow: –∞–Ω–∞–ª–∏–∑ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ ‚Üí –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª–∞–π–¥–æ–≤ ‚Üí —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ ‚Üí –æ—Ç–ø—Ä–∞–≤–∫–∞.
 */

import { inngest } from '../client';
import { bot } from '../../bot';
import { CarouselContentGeneratorService } from '../../services/carousel-content-generator.service';
import { VibeCodingContentService } from '../../services/vibecoding-content.service';
import {
  InstagramCanvasService,
  ColorTemplate,
} from '../../services/instagram-canvas.service';
import { logger, LogType } from '../../utils/logger';
import { InputMediaPhoto } from 'telegraf/types';
import { promises as fs, createReadStream } from 'fs';
// import path from "path"; // –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è

const contentGenerator = new CarouselContentGeneratorService();
const vibeContentService = new VibeCodingContentService();
const canvasService = new InstagramCanvasService();

/**
 * –¢–∏–ø—ã –¥–ª—è workflow –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏
 */
export interface CarouselGenerationContext {
  userId: string;
  chatId: string;
  messageId: string;
  topic: string;
  slidesCount: number;
  requestId: string;
  startTime: Date;
}

export interface CarouselSlide {
  id: string;
  type: 'title' | 'principle' | 'quote' | 'practice' | 'summary';
  title: string;
  content: string;
  backgroundStyle: string;
  order: number;
}

export interface ExtractedContent {
  title: string;
  principles: string[];
  quotes: string[];
  concepts: string[];
}

interface GenerateCarouselPayload {
  topic: string;
  telegramUserId: string;
  messageId: number;
  colorTemplate?: ColorTemplate;
}

/**
 * üé® –ì–õ–ê–í–ù–ê–Ø INNGEST –§–£–ù–ö–¶–ò–Ø: –ü–æ–ª–Ω—ã–π —Ü–∏–∫–ª —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏
 *
 * –≠—Ç–∞–ø—ã:
 * 1. üìù –ê–Ω–∞–ª–∏–∑ —Ç–µ–º—ã –∏ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ü–µ–Ω–∞—Ä–∏—è
 * 2. ‚úçÔ∏è  –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤ –¥–ª—è —Å–ª–∞–π–¥–æ–≤
 * 3. üé® –°–æ–∑–¥–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–≤—ã–º —Ç–µ–º–ø–ª–µ–π—Ç–æ–º
 * 4. üì± –û—Ç–ø—Ä–∞–≤–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 *
 * –° –ø–æ—à–∞–≥–æ–≤–æ–π –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–µ–π –Ω–∞ –∫–∞–∂–¥–æ–º —ç—Ç–∞–ø–µ!
 */
export const generateCarousel = inngest.createFunction(
  { id: 'generate-carousel-from-topic', name: 'Generate Carousel from Topic' },
  { event: 'app/carousel.generate.request' },
  async ({ event, step }) => {
    const {
      topic,
      telegramUserId,
      messageId,
      colorTemplate = ColorTemplate.GALAXY_SPIRAL_BLUR,
    } = event.data as GenerateCarouselPayload;

    // üé® –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Ç–µ–º–ø–ª–µ–π—Ç–µ
    const templates = InstagramCanvasService.getColorTemplates();
    const selectedTemplate = templates[colorTemplate];

    // üîë –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    const BOT_TOKEN = process.env.BOT_TOKEN;
    if (!BOT_TOKEN) {
      logger.error(
        '‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è Inngest —Ñ—É–Ω–∫—Ü–∏–∏',
        {
          type: LogType.BUSINESS_LOGIC,
          data: { topic, telegramUserId, colorTemplate },
        }
      );
      throw new Error('BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è Inngest —Ñ—É–Ω–∫—Ü–∏–∏');
    }

    let statusMessageId: number | null = null;

    try {
      // üéØ –®–ê–ì 1: –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã —Å —É–∫–∞–∑–∞–Ω–∏–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å—Ç–∏–ª—è
      const statusMessage = await step.run('notify-start', async () => {
        return bot.telegram.sendMessage(
          telegramUserId,
          `üé® **–°–æ–∑–¥–∞—é –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É:** "${topic}"\n` +
            `üé® **–°—Ç–∏–ª—å:** ${selectedTemplate.emoji} ${selectedTemplate.name}\n\n` +
            `üìã **–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã:**\n` +
            `1Ô∏è‚É£ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞—é —Å—Ü–µ–Ω–∞—Ä–∏–π\n` +
            `2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–ª–∞–π–¥–æ–≤\n` +
            `3Ô∏è‚É£ –°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ\n` +
            `4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—É—Å–µ–ª—å\n\n` +
            `‚è≥ –ù–∞—á–∏–Ω–∞—é —Ä–∞–±–æ—Ç—É...`,
          {
            parse_mode: 'Markdown',
            reply_parameters: { message_id: messageId },
          }
        );
      });
      statusMessageId = statusMessage.message_id;

      // üéØ –®–ê–ì 2: –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
      await step.run('update-status-analyzing', async () => {
        return bot.telegram.editMessageText(
          telegramUserId,
          statusMessageId!,
          undefined,
          `üé® **–°–æ–∑–¥–∞—é –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É:** "${topic}"\n` +
            `üé® **–°—Ç–∏–ª—å:** ${selectedTemplate.emoji} ${selectedTemplate.name}\n\n` +
            `üìã **–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã:**\n` +
            `‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞—é —Å—Ü–µ–Ω–∞—Ä–∏–π\n` +
            `2Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–ª–∞–π–¥–æ–≤\n` +
            `3Ô∏è‚É£ –°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ\n` +
            `4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—É—Å–µ–ª—å\n\n` +
            `üîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞—é —Å—Ü–µ–Ω–∞—Ä–∏–π...`,
          { parse_mode: 'Markdown' }
        );
      });

      // üéØ –®–ê–ì 3: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∞–π–¥–æ–≤
      const slides = await step.run('generate-slide-content', async () => {
        return contentGenerator.generateCarouselSlides(topic);
      });

      if (!slides || slides.length === 0) {
        throw new Error('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è —Å–ª–∞–π–¥–æ–≤.');
      }

      // üéØ –®–ê–ì 4: –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–æ–≤
      await step.run('update-status-texts', async () => {
        return bot.telegram.editMessageText(
          telegramUserId,
          statusMessageId!,
          undefined,
          `üé® **–°–æ–∑–¥–∞—é –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É:** "${topic}"\n` +
            `üé® **–°—Ç–∏–ª—å:** ${selectedTemplate.emoji} ${selectedTemplate.name}\n\n` +
            `üìã **–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã:**\n` +
            `‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞—é —Å—Ü–µ–Ω–∞—Ä–∏–π\n` +
            `‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–ª–∞–π–¥–æ–≤ (${slides.length} —Å–ª–∞–π–¥–æ–≤)\n` +
            `3Ô∏è‚É£ –°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ\n` +
            `4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—É—Å–µ–ª—å\n\n` +
            `üé® –°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å—Ç–∏–ª–µ "${selectedTemplate.name}"...`,
          { parse_mode: 'Markdown' }
        );
      });

      // üéØ –®–ê–ì 5: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ü–≤–µ—Ç–æ–≤—ã–º —Ç–µ–º–ø–ª–µ–π—Ç–æ–º
      const imagePaths = await step.run('generate-slide-images', async () => {
        return canvasService.generateCarouselImageFiles(
          slides,
          undefined,
          colorTemplate
        );
      });

      // üéØ –®–ê–ì 6: –£–≤–µ–¥–æ–º–ª—è–µ–º –æ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
      await step.run('update-status-sending', async () => {
        return bot.telegram.editMessageText(
          telegramUserId,
          statusMessageId!,
          undefined,
          `üé® **–°–æ–∑–¥–∞—é –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É:** "${topic}"\n` +
            `üé® **–°—Ç–∏–ª—å:** ${selectedTemplate.emoji} ${selectedTemplate.name}\n\n` +
            `üìã **–ü–ª–∞–Ω —Ä–∞–±–æ—Ç—ã:**\n` +
            `‚úÖ –ê–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ç–µ–º—É –∏ —Å–æ–∑–¥–∞—é —Å—Ü–µ–Ω–∞—Ä–∏–π\n` +
            `‚úÖ –ì–µ–Ω–µ—Ä–∏—Ä—É—é —Ç–µ–∫—Å—Ç—ã –¥–ª—è —Å–ª–∞–π–¥–æ–≤ (${slides.length} —Å–ª–∞–π–¥–æ–≤)\n` +
            `‚úÖ –°–æ–∑–¥–∞—é –∫—Ä–∞—Å–∏–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è (${imagePaths.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)\n` +
            `4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–ª—è—é –≥–æ—Ç–æ–≤—É—é –∫–∞—Ä—É—Å–µ–ª—å\n\n` +
            `üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–∞—Ä—É—Å–µ–ª—å –≤ —Å—Ç–∏–ª–µ "${selectedTemplate.name}"...`,
          { parse_mode: 'Markdown' }
        );
      });

      // üéØ –®–ê–ì 7: –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–æ–≤ –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
      await step.run('verify-files-exist', async () => {
        const fs = await import('fs/promises');
        for (const imagePath of imagePaths) {
          try {
            await fs.access(imagePath);
            const stats = await fs.stat(imagePath);
            if (stats.size === 0) {
              throw new Error(`–§–∞–π–ª ${imagePath} –ø—É—Å—Ç–æ–π!`);
            }
            logger.info(
              `‚úÖ –§–∞–π–ª –ø—Ä–æ–≤–µ—Ä–µ–Ω –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π: ${imagePath} (${stats.size} bytes)`,
              {
                type: LogType.BUSINESS_LOGIC,
              }
            );
          } catch (error) {
            logger.error(`‚ùå –§–∞–π–ª –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${imagePath}`, {
              type: LogType.BUSINESS_LOGIC,
              error: error instanceof Error ? error : new Error(String(error)),
            });
            throw new Error(`–§–∞–π–ª –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${imagePath}`);
          }
        }
        return { verified: imagePaths.length };
      });

      // üéØ –®–ê–ì 8: –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—É –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º
      const mediaGroup: InputMediaPhoto[] = imagePaths.map(
        (imagePath, index) => ({
          type: 'photo',
          media: { source: createReadStream(imagePath) }, // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–ø–æ—Å–æ–± –¥–ª—è Telegram API
          caption:
            index === 0
              ? `üé® **–ö–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É:** "${topic}"\n\n` +
                `üìä **–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ:**\n` +
                slides
                  .map((slide, i) => `${i + 1}. ${slide.title}`)
                  .join('\n') +
                `\n\nüí° –°–æ–∑–¥–∞–Ω–æ —Å –ø–æ–º–æ—â—å—é @bible_vibecoder_bot`
              : undefined,
          parse_mode: index === 0 ? 'Markdown' : undefined,
        })
      );

      await step.run('send-media-group', async () => {
        return bot.telegram.sendMediaGroup(telegramUserId, mediaGroup, {
          reply_parameters: { message_id: messageId },
        });
      });

      // üéØ –®–ê–ì 9: –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Instagram-ready —Ç–µ–∫—Å—Ç —Å –≤–µ–±-–∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ–º
      const instagramText = await step.run(
        'generate-instagram-text',
        async () => {
          return await vibeContentService.generateInstagramPost(topic, slides);
        }
      );

      // üéØ –®–ê–ì 10: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Instagram
      await step.run('send-instagram-text', async () => {
        return bot.telegram.sendMessage(
          telegramUserId,
          `üì± **–ì–û–¢–û–í–´–ô –¢–ï–ö–°–¢ –î–õ–Ø INSTAGRAM:**\n\n` +
            `üìã *–°–∫–æ–ø–∏—Ä—É–π –∏ –≤—Å—Ç–∞–≤—å —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –≤ Instagram:*\n\n` +
            `\`\`\`\n${instagramText}\n\`\`\`\n\n` +
            `üí° **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:**\n` +
            `1Ô∏è‚É£ –°–∫–æ–ø–∏—Ä—É–π —Ç–µ–∫—Å—Ç –≤—ã—à–µ\n` +
            `2Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏\n` +
            `3Ô∏è‚É£ –°–æ–∑–¥–∞–π –ø–æ—Å—Ç –≤ Instagram\n` +
            `4Ô∏è‚É£ –í—Å—Ç–∞–≤—å —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç\n` +
            `5Ô∏è‚É£ –î–æ–±–∞–≤—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏\n` +
            `6Ô∏è‚É£ –ü—É–±–ª–∏–∫—É–π! üöÄ`,
          {
            parse_mode: 'Markdown',
            reply_parameters: { message_id: messageId },
          }
        );
      });

      // üéØ –®–ê–ì 11: –§–∏–Ω–∞–ª—å–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
      await step.run('notify-success', async () => {
        return bot.telegram.editMessageText(
          telegramUserId,
          statusMessageId!,
          undefined,
          `üé® **–ö–∞—Ä—É—Å–µ–ª—å –≥–æ—Ç–æ–≤–∞!** ‚ú®\n\n` +
            `üìã **–†–µ–∑—É–ª—å—Ç–∞—Ç:**\n` +
            `‚úÖ –¢–µ–º–∞ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞\n` +
            `‚úÖ –°–æ–∑–¥–∞–Ω–æ ${slides.length} —Å–ª–∞–π–¥–æ–≤\n` +
            `‚úÖ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ ${imagePaths.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π\n` +
            `‚úÖ –ö–∞—Ä—É—Å–µ–ª—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞\n` +
            `‚úÖ –ì–æ—Ç–æ–≤—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è Instagram —Å–æ–∑–¥–∞–Ω\n\n` +
            `üéâ –ö–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–µ–º—É "${topic}" –≥–æ—Ç–æ–≤–∞!\n` +
            `üì± –¢–µ–∫—Å—Ç –¥–ª—è Instagram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ—Ç–¥–µ–ª—å–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º\n` +
            `üí° –î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∫–∞—Ä—É—Å–µ–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ /carousel`,
          { parse_mode: 'Markdown' }
        );
      });

      // üéØ –®–ê–ì 12: –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
      await step.run('cleanup-images', async () => {
        const cleanupPromises = imagePaths.map(p =>
          fs.unlink(p).catch(err =>
            logger.warn(`–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Ñ–∞–π–ª: ${p}`, {
              type: LogType.EXTERNAL_SERVICE,
              error: err,
            })
          )
        );
        await Promise.all(cleanupPromises);
        return { success: true };
      });

      logger.info('üéâ –ö–∞—Ä—É—Å–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞ –∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞', {
        type: LogType.BUSINESS_LOGIC,
        data: {
          topic,
          telegramUserId,
          slidesCount: slides.length,
          imagesCount: imagePaths.length,
        },
      });

      return {
        success: true,
        topic,
        slidesCount: slides.length,
        imagesCount: imagePaths.length,
      };
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏', {
        type: LogType.BUSINESS_LOGIC,
        error: error instanceof Error ? error : new Error(String(error)),
        data: { topic, telegramUserId },
      });

      // –£–≤–µ–¥–æ–º–ª—è–µ–º –æ–± –æ—à–∏–±–∫–µ
      await step.run('notify-error', async () => {
        const errorMessage =
          `‚ùå **–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏**\n\n` +
          `üéØ **–¢–µ–º–∞:** "${topic}"\n` +
          `üí• **–ü—Ä–æ–±–ª–µ–º–∞:** ${error instanceof Error ? error.message : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}\n\n` +
          `üîÑ **–ß—Ç–æ –¥–µ–ª–∞—Ç—å:**\n` +
          `‚Ä¢ –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥—É—é —Ç–µ–º—É\n` +
          `‚Ä¢ –ò–ª–∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É —á–µ—Ä–µ–∑ –º–∏–Ω—É—Ç—É\n` +
          `‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /carousel –¥–ª—è –Ω–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞`;

        if (statusMessageId) {
          // –û–±–Ω–æ–≤–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          return bot.telegram.editMessageText(
            telegramUserId,
            statusMessageId,
            undefined,
            errorMessage,
            { parse_mode: 'Markdown' }
          );
        } else {
          // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
          return bot.telegram.sendMessage(telegramUserId, errorMessage, {
            parse_mode: 'Markdown',
            reply_parameters: { message_id: messageId },
          });
        }
      });

      throw error;
    }
  }
);

/**
 * –¢–∏–ø—ã —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏
 */
export const CAROUSEL_EVENTS = {
  GENERATE_REQUESTED: 'carousel/generate.requested',
  CONTENT_ANALYZED: 'carousel/content.analyzed',
  SLIDES_GENERATED: 'carousel/slides.generated',
  IMAGES_RENDERED: 'carousel/images.rendered',
  GENERATE_CANCELLED: 'carousel/generate.cancelled',
} as const;

/**
 * Utility —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
 */
export async function requestCarouselGeneration(data: {
  userId: string;
  chatId: string;
  messageId: string;
  topic: string;
  slidesCount?: number;
}) {
  return inngest.send({
    name: CAROUSEL_EVENTS.GENERATE_REQUESTED,
    data: {
      ...data,
      timestamp: new Date(),
    },
  });
}

export default generateCarousel;
