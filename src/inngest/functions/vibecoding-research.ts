/**
 * üïâÔ∏è Inngest Function: VibeCoding Research Agent
 *
 * –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —á–µ—Ä–µ–∑ AI SDK –∞–≥–µ–Ω—Ç–∞.
 * –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Ç–µ–º VibeCoding —Å –≤–µ–±-–ø–æ–∏—Å–∫–æ–º –∏ AI-–æ–±—Ä–∞–±–æ—Ç–∫–æ–π.
 */

import { inngest } from '../client';
import { bot } from '../../bot';
import {
  vibeCodingAgent,
  type ResearchAnalysis,
} from '../../agents/vibecoding-research-agent';
import { logger, LogType } from '../../utils/logger';

/**
 * üéØ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è —Ç–µ–º VibeCoding —á–µ—Ä–µ–∑ AI –∞–≥–µ–Ω—Ç–∞
 */
export const vibeCodingResearch = inngest.createFunction(
  {
    id: 'vibecoding-research',
    name: 'VibeCoding Research Agent',
    retries: 2,
  },
  {
    event: 'app/research.request',
  },
  async ({ event, step }) => {
    const { topic, telegramUserId, depth = 'detailed' } = event.data;

    try {
      logger.info('üïâÔ∏è –ó–∞–ø—É—Å–∫ VibeCoding Research Agent', {
        type: LogType.BUSINESS_LOGIC,
        data: { topic, telegramUserId, depth },
      });

      // üîç –®–∞–≥ 1: –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ AI SDK –∞–≥–µ–Ω—Ç–∞
      const research = await step.run('ai-agent-research', async () => {
        logger.info('ü§ñ AI SDK –∞–≥–µ–Ω—Ç –Ω–∞—á–∏–Ω–∞–µ—Ç –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ', {
          type: LogType.BUSINESS_LOGIC,
          data: { topic, depth },
        });

        return await vibeCodingAgent.researchTopic(topic, depth as any);
      });

      // üìù –®–∞–≥ 2: –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è Telegram
      const formattedMessage = await step.run('format-results', async () => {
        return formatResearchResults(research);
      });

      // üì§ –®–∞–≥ 3: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await step.run('send-results', async () => {
        try {
          await bot.telegram.sendMessage(telegramUserId, formattedMessage, {
            parse_mode: 'Markdown',
            link_preview_options: { is_disabled: false },
          });

          logger.info('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', {
            type: LogType.BUSINESS_LOGIC,
            data: {
              telegramUserId,
              topic,
              confidenceLevel: research.confidenceLevel,
              insightsCount: research.keyInsights.length,
            },
          });
        } catch (error) {
          logger.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é', {
            type: LogType.ERROR,
            error: error instanceof Error ? error : new Error(String(error)),
            data: { telegramUserId, topic },
          });
          throw error;
        }
      });

      return {
        success: true,
        topic,
        confidenceLevel: research.confidenceLevel,
        resultsSent: true,
      };
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ VibeCoding Research Agent', {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
        data: { topic, telegramUserId, depth },
      });

      // üö® –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      try {
        await bot.telegram.sendMessage(
          telegramUserId,
          `üïâÔ∏è *–ò–∑–≤–∏–Ω–∏, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–∏ —Ç–µ–º—ã*\n\n` +
            `–¢–µ–º–∞: "${topic}"\n\n` +
            `–ü–æ–ø—Ä–æ–±—É–π –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∑–∞–ø—Ä–æ—Å –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º VibeCoding:\n` +
            `‚Ä¢ –û—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n` +
            `‚Ä¢ –ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n` +
            `‚Ä¢ –ö–∞—á–µ—Å—Ç–≤–æ –≤–∞–∂–Ω–µ–µ —Å–∫–æ—Ä–æ—Å—Ç–∏\n\n` +
            `–ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É \`/research <—Ç–µ–º–∞>\` –¥–ª—è –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏.`,
          { parse_mode: 'Markdown' }
        );
      } catch (sendError) {
        logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ', {
          type: LogType.ERROR,
          error:
            sendError instanceof Error
              ? sendError
              : new Error(String(sendError)),
        });
      }

      throw error;
    }
  }
);

/**
 * üìù –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –¥–ª—è Telegram
 */
function formatResearchResults(research: ResearchAnalysis): string {
  const confidenceEmoji =
    research.confidenceLevel >= 8
      ? 'üü¢'
      : research.confidenceLevel >= 6
        ? 'üü°'
        : 'üî¥';

  let message = `üïâÔ∏è *VibeCoding Research: ${research.topic}*\n\n`;

  // üìä –†–µ–∑—é–º–µ
  message += `üìù **–†–µ–∑—é–º–µ:**\n${research.summary}\n\n`;

  // üí° –ö–ª—é—á–µ–≤—ã–µ –∏–Ω—Å–∞–π—Ç—ã
  if (research.keyInsights.length > 0) {
    message += `üí° **–ö–ª—é—á–µ–≤—ã–µ –ò–Ω—Å–∞–π—Ç—ã:**\n`;
    research.keyInsights.forEach((insight, index) => {
      message += `${index + 1}. ${insight}\n`;
    });
    message += '\n';
  }

  // üî• –¢—Ä–µ–Ω–¥—ã
  if (research.trends.length > 0) {
    message += `üî• **–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –¢—Ä–µ–Ω–¥—ã:**\n`;
    research.trends.forEach((trend, index) => {
      message += `${index + 1}. ${trend}\n`;
    });
    message += '\n';
  }

  // üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
  if (research.recommendations.length > 0) {
    message += `üéØ **–ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n`;
    research.recommendations.forEach((rec, index) => {
      message += `${index + 1}. ${rec}\n`;
    });
    message += '\n';
  }

  // üîç –ò—Å—Ç–æ—á–Ω–∏–∫–∏ (–ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ 3)
  if (research.sources.length > 0) {
    message += `üîç **–ò—Å—Ç–æ—á–Ω–∏–∫–∏:**\n`;
    research.sources.slice(0, 3).forEach((source, index) => {
      message += `${index + 1}. [${source.title}](${source.url})\n   _${source.snippet.slice(0, 100)}..._\n`;
    });
    message += '\n';
  }

  // üé≤ –°–≤—è–∑–∞–Ω–Ω—ã–µ —Ç–µ–º—ã
  if (research.relatedTopics.length > 0) {
    message += `üé≤ **–î–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ –∏–∑—É—á–µ–Ω–∏—è:**\n`;
    research.relatedTopics.forEach((topic, index) => {
      message += `${index + 1}. ${topic}\n`;
    });
    message += '\n';
  }

  // üìä –ú–µ—Ç—Ä–∏–∫–∏
  message += `üìä **–ê–Ω–∞–ª–∏–∑:** ${confidenceEmoji} –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å ${research.confidenceLevel}/10\n\n`;
  message += `*–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ VibeCoding AI Agent —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –≤–µ–±-–ø–æ–∏—Å–∫–∞ –∏ –∞–Ω–∞–ª–∏–∑–∞*\n`;
  message += `#VibeCoding #AIResearch #${research.topic.replace(/\s+/g, '')}`;

  return message;
}

/**
 * üí¨ –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã
 */
export const vibeCodingQuickAnswer = inngest.createFunction(
  {
    id: 'vibecoding-quick-answer',
    name: 'VibeCoding Quick Answer',
    retries: 2,
  },
  {
    event: 'app/question.ask',
  },
  async ({ event, step }) => {
    const { question, telegramUserId } = event.data;

    try {
      logger.info('üí° –ó–∞–ø—É—Å–∫ VibeCoding Quick Answer', {
        type: LogType.BUSINESS_LOGIC,
        data: { question, telegramUserId },
      });

      // ü§ñ –ü–æ–ª—É—á–∞–µ–º –±—ã—Å—Ç—Ä—ã–π –æ—Ç–≤–µ—Ç –æ—Ç –∞–≥–µ–Ω—Ç–∞
      const answer = await step.run('get-quick-answer', async () => {
        return await vibeCodingAgent.quickAnalysis(question);
      });

      // üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      await step.run('send-answer', async () => {
        const message =
          `üïâÔ∏è *VibeCoding Wisdom*\n\n` +
          `**–í–æ–ø—Ä–æ—Å:** ${question}\n\n` +
          `**–û—Ç–≤–µ—Ç:** ${answer}\n\n` +
          `*–î–ª—è –±–æ–ª–µ–µ –≥–ª—É–±–æ–∫–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É* \`/research <—Ç–µ–º–∞>\``;

        await bot.telegram.sendMessage(telegramUserId, message, {
          parse_mode: 'Markdown',
        });
      });

      return { success: true, question, answerLength: answer.length };
    } catch (error) {
      logger.error('‚ùå –û—à–∏–±–∫–∞ –≤ VibeCoding Quick Answer', {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
      });

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º fallback –æ—Ç–≤–µ—Ç
      try {
        await bot.telegram.sendMessage(
          telegramUserId,
          `üïâÔ∏è *VibeCoding —É—á–∏—Ç —Ç–µ—Ä–ø–µ–Ω–∏—é*\n\n` +
            `–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–æ–ø—Ä–æ—Å–∞. –ü–æ–ø—Ä–æ–±—É–π:\n` +
            `‚Ä¢ –ü–µ—Ä–µ—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å\n` +
            `‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É \`/research\` –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è\n` +
            `‚Ä¢ –û–±—Ä–∞—Ç–∏—Ç—å—Å—è –∫ –æ—Å–Ω–æ–≤–Ω—ã–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º VibeCoding`,
          { parse_mode: 'Markdown' }
        );
      } catch {}

      throw error;
    }
  }
);
