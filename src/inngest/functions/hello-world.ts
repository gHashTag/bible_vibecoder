/**
 * Hello World Inngest Function
 *
 * –ë–∞–∑–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è "Hello World" –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–±–æ—Ç—ã Inngest
 * —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏ –∏ –ª—É—á—à–∏–º–∏ –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏.
 */

import { inngest } from '../client';

/**
 * –°–æ–±—ã—Ç–∏–µ –¥–ª—è —Ç—Ä–∏–≥–≥–µ—Ä–∞ Hello World —Ñ—É–Ω–∫—Ü–∏–∏
 */
export const HELLO_WORLD_EVENT = 'demo/hello.world' as const;

/**
 * –¢–∏–ø—ã –¥–ª—è Hello World —Ñ—É–Ω–∫—Ü–∏–∏
 */
export interface HelloWorldEventData {
  name?: string;
  language?: 'en' | 'ru' | 'es' | 'fr';
  timestamp?: string;
}

export interface HelloWorldResult {
  message: string;
  processedAt: string;
  eventData: HelloWorldEventData;
  environment: {
    nodeEnv: string;
    inngestPort: number;
  };
}

/**
 * Hello World Inngest Function
 *
 * –ü—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–æ–±—ã—Ç–∏–µ —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ.
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä—É–µ—Ç –±–∞–∑–æ–≤—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ Inngest –∏ —Ä–∞–±–æ—Ç—É —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º–∏ –ø–æ—Ä—Ç–∞–º–∏.
 *
 * @example
 * ```typescript
 * // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–±—ã—Ç–∏—è
 * await inngest.send({
 *   name: 'demo/hello.world',
 *   data: { name: '–ì—É—Ä—É', language: 'ru' }
 * });
 * ```
 */
export const helloWorldFunction = inngest.createFunction(
  {
    id: 'hello-world',
    name: 'Hello World Function',

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ retry –∏ timeout –¥–ª—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
    retries: 3,

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—à–∏–±–æ–∫
    onFailure: async ({ error, event, runId }) => {
      console.error(`Hello World function failed for run ${runId}:`, {
        error: error.message,
        eventName: event.name,
        eventData: event.data,
      });
    },
  },

  // –°–æ–±—ã—Ç–∏–µ-—Ç—Ä–∏–≥–≥–µ—Ä
  { event: HELLO_WORLD_EVENT },

  // –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Ñ—É–Ω–∫—Ü–∏–∏
  async ({ event, step }): Promise<HelloWorldResult> => {
    const {
      name = 'World',
      language = 'en',
      timestamp,
    } = event.data as HelloWorldEventData;

    // –®–∞–≥ 1: –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ö–æ–¥—è—â–µ–≥–æ —Å–æ–±—ã—Ç–∏—è
    await step.run('log-incoming-event', async () => {
      console.log('Processing Hello World event:', {
        name,
        language,
        timestamp: timestamp || new Date().toISOString(),
        runId: event.id,
      });

      return { logged: true };
    });

    // –®–∞–≥ 2: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —è–∑—ã–∫–∞
    const greeting = await step.run('generate-greeting', async () => {
      const greetings = {
        en: `Hello, ${name}! üëã`,
        ru: `–ü—Ä–∏–≤–µ—Ç, ${name}! üïâÔ∏è`,
        es: `¬°Hola, ${name}! üåü`,
        fr: `Bonjour, ${name}! ‚ú®`,
      };

      return greetings[language] || greetings.en;
    });

    // –®–∞–≥ 3: –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
    const result = await step.run(
      'prepare-result',
      async (): Promise<HelloWorldResult> => {
        return {
          message: greeting,
          processedAt: new Date().toISOString(),
          eventData: { name, language, timestamp },
          environment: {
            nodeEnv: process.env.NODE_ENV || 'development',
            inngestPort: parseInt(process.env.INNGEST_DEV_PORT || '8288'),
          },
        };
      }
    );

    // –®–∞–≥ 4: –§–∏–Ω–∞–ª—å–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    await step.run('log-completion', async () => {
      console.log('Hello World function completed successfully:', {
        message: result.message,
        processedAt: result.processedAt,
      });

      return { completed: true };
    });

    return result;
  }
);

/**
 * –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ Hello World —Å–æ–±—ã—Ç–∏—è
 */
export const sendHelloWorldEvent = async (data: HelloWorldEventData = {}) => {
  return await inngest.send({
    name: HELLO_WORLD_EVENT,
    data: {
      ...data,
      timestamp: data.timestamp || new Date().toISOString(),
    },
  });
};

/**
 * –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ñ—É–Ω–∫—Ü–∏–∏
 */
export const helloWorld = helloWorldFunction;
export default helloWorldFunction;
