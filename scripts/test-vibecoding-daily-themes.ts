#!/usr/bin/env bun

/**
 * üß™ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä—É–±—Ä–∏–∫ VibeCoding
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Ä–∞–∑–Ω—ã–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏ –∏ —Å–ª—É—á–∞–π–Ω—ã–µ —Ç–µ–º—ã
 */

import { VibeCodingVectorService } from '../src/services/vibecoding-vector.service';
import { logger, LogType } from '../src/utils/logger';

const vectorService = new VibeCodingVectorService();

/**
 * üìÖ –¢–µ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä—É–±—Ä–∏–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏ (–∫–æ–ø–∏—è –∏–∑ broadcast —Ñ—É–Ω–∫—Ü–∏–∏)
 */
const DAILY_VIBECODING_THEMES = {
  // 0 = –í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ
  0: {
    name: '–ú–∏—Ñ—ã –∏ –†–µ–∞–ª—å–Ω–æ—Å—Ç—å VibeCoding',
    query: '–º–∏—Ñ—ã vibecoding —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å –∑–∞–±–ª—É–∂–¥–µ–Ω–∏—è',
    categories: ['general', 'fundamentals'],
    emoji: 'üïâÔ∏è',
  },
  // 1 = –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
  1: {
    name: '–û—Å–Ω–æ–≤—ã –∏ –§–∏–ª–æ—Å–æ—Ñ–∏—è VibeCoding',
    query: '–±–∏–±–ª–∏—è vibecoding –æ—Å–Ω–æ–≤—ã —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è –ø—Ä–∏–Ω—Ü–∏–ø—ã',
    categories: ['fundamentals', 'main_book'],
    emoji: 'üìñ',
  },
  // 2 = –í—Ç–æ—Ä–Ω–∏–∫
  2: {
    name: 'Cursor AI –∏ –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã',
    query: 'cursor ai –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ —Ä—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ',
    categories: ['tools'],
    emoji: 'üõ†Ô∏è',
  },
  // 3 = –°—Ä–µ–¥–∞
  3: {
    name: '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω—ã–µ –ü—Ä–∞–∫—Ç–∏–∫–∏ –∏ Flow',
    query: '–º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –ø–æ—Ç–æ–∫ —Å–æ—Å—Ç–æ—è–Ω–∏–µ',
    categories: ['practices'],
    emoji: 'üßò‚Äç‚ôÇÔ∏è',
  },
  // 4 = –ß–µ—Ç–≤–µ—Ä–≥
  4: {
    name: '–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ –∏ Roadmap',
    query: '—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ roadmap –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–π –ø—Ä–æ–¥–∞–∫—à–µ–Ω',
    categories: ['development'],
    emoji: 'üöÄ',
  },
  // 5 = –ü—è—Ç–Ω–∏—Ü–∞
  5: {
    name: 'AI-–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 2025',
    query: 'ai –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 2025 –¥–µ—Ç–∞–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –Ω–æ–≤—ã–µ',
    categories: ['tools', 'analytics'],
    emoji: 'ü§ñ',
  },
  // 6 = –°—É–±–±–æ—Ç–∞
  6: {
    name: '–ö–æ–Ω—Ç–µ–Ω—Ç –∏ Telegram',
    query: 'telegram –ø–æ—Å—Ç—ã –∫–æ–Ω—Ç–µ–Ω—Ç –ø–ª–∞–Ω—ã –ø—Ä–æ–¥–∞—é—â–∏–µ',
    categories: ['general'],
    emoji: 'üì±',
  },
} as const;

/**
 * üé≤ –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–º—É –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –¥–Ω—è –Ω–µ–¥–µ–ª–∏
 */
function getThemeForDay(dayOfWeek: number) {
  const theme =
    DAILY_VIBECODING_THEMES[dayOfWeek as keyof typeof DAILY_VIBECODING_THEMES];
  return theme;
}

/**
 * üß™ –¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ç–µ–º—É –¥–Ω—è
 */
async function testDailyTheme(dayOfWeek: number) {
  const theme = getThemeForDay(dayOfWeek);
  const dayNames = [
    '–í–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ',
    '–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫',
    '–í—Ç–æ—Ä–Ω–∏–∫',
    '–°—Ä–µ–¥–∞',
    '–ß–µ—Ç–≤–µ—Ä–≥',
    '–ü—è—Ç–Ω–∏—Ü–∞',
    '–°—É–±–±–æ—Ç–∞',
  ];

  console.log(`\n${theme.emoji} === ${dayNames[dayOfWeek].toUpperCase()} ===`);
  console.log(`   üìù –¢–µ–º–∞: ${theme.name}`);
  console.log(`   üîç –ü–æ–∏—Å–∫–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å: "${theme.query}"`);
  console.log(`   üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: ${theme.categories.join(', ')}`);

  try {
    // –ò—â–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ —Ç–µ–º–µ –¥–Ω—è
    const searchResult = await vectorService.hybridSearch(theme.query, {
      limit: 3,
    });

    if (
      searchResult.combinedResults &&
      searchResult.combinedResults.length > 0
    ) {
      console.log(
        `   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${searchResult.combinedResults.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:`
      );

      searchResult.combinedResults.slice(0, 2).forEach((result, index) => {
        console.log(`   ${index + 1}. ${result.title || '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞'}`);
        console.log(
          `      üìÅ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${result.metadata?.file_category || 'unknown'}`
        );
        console.log(`      üìù –ö–æ–Ω—Ç–µ–Ω—Ç: ${result.content.substring(0, 100)}...`);
        console.log(
          `      üìä –°—Ö–æ–¥—Å—Ç–≤–æ: ${(result.similarity * 100).toFixed(1)}%`
        );
      });
    } else {
      console.log(`   ‚ùå –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞: "${theme.query}"`);
    }
  } catch (error) {
    console.error(`   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:`, error);
  }
}

/**
 * üöÄ –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞
 */
async function main() {
  console.log('üß™ –¢–ï–°–¢ –°–ò–°–¢–ï–ú–´ –ï–ñ–ï–î–ù–ï–í–ù–´–• –¢–ï–ú–ê–¢–ò–ß–ï–°–ö–ò–• –†–£–ë–†–ò–ö VIBECODING\n');

  const today = new Date();
  const currentDay = today.getDay();

  console.log(
    `üìÖ –°–µ–≥–æ–¥–Ω—è: ${today.toLocaleDateString('ru-RU', {
      weekday: 'long',
      day: 'numeric',
      month: 'long',
    })} (–¥–µ–Ω—å –Ω–µ–¥–µ–ª–∏: ${currentDay})`
  );

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å
  console.log('\nüéØ –¢–ï–ú–ê –°–ï–ì–û–î–ù–Ø–®–ù–ï–ì–û –î–ù–Ø:');
  await testDailyTheme(currentDay);

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –≤—Å–µ –¥–Ω–∏ –Ω–µ–¥–µ–ª–∏
  console.log('\nüìä –í–°–ï –¢–ï–ú–´ –ù–ï–î–ï–õ–ò:');
  for (let day = 0; day < 7; day++) {
    await testDailyTheme(day);
    // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
    await new Promise(resolve => setTimeout(resolve, 500));
  }

  console.log('\n‚úÖ –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
main().catch(error => {
  console.error('‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ:', error);
  process.exit(1);
});
