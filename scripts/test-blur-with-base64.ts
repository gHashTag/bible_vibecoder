import {
  InstagramCanvasService,
  ColorTemplate,
} from '../src/services/instagram-canvas.service';
import type { CarouselSlide } from '../src/types';
import path from 'path';
import fs from 'fs';

// üåå –ü—Ä–æ—Å—Ç–æ–π —Å–ª–∞–π–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testSlide: CarouselSlide = {
  order: 1,
  type: 'title',
  title: 'üåå –¢–µ—Å—Ç Base64 –§–æ–Ω–æ–≤',
  content:
    '–ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ base64 encoding –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è',
};

async function testBlurWithBase64() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä—É–µ–º blur —Å base64 —Ñ–æ–Ω–æ–≤—ã–º–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏...\n');

  const canvasService = new InstagramCanvasService();
  const outputDir = './test-outputs/blur-base64-test';

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  // üì∏ –ü–æ–ª—É—á–∞–µ–º –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –≤ base64
  const imagePath = path.resolve(
    './assets/bg-bible-vibecoding/u2217837778_A_book_hanging_in_the_air_against_the_backdrop_of_11aa5b66-5b68-422f-b68f-03121eea5b93_0.png'
  );

  if (!fs.existsSync(imagePath)) {
    console.error('‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ:', imagePath);
    return;
  }

  const imageBuffer = fs.readFileSync(imagePath);
  const base64Image = imageBuffer.toString('base64');
  const dataUri = `data:image/png;base64,${base64Image}`;

  console.log(`üì∏ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ: ${path.basename(imagePath)}`);
  console.log(`üìä –†–∞–∑–º–µ—Ä: ${(imageBuffer.length / 1024 / 1024).toFixed(2)}MB`);
  console.log(`üîó Base64 –¥–ª–∏–Ω–∞: ${base64Image.length} —Å–∏–º–≤–æ–ª–æ–≤\n`);

  // –í—Ä–µ–º–µ–Ω–Ω–æ –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º HTML template, —á—Ç–æ–±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å base64
  const originalGenerateHtml = (canvasService as any).generateHtmlTemplate;

  (canvasService as any).generateHtmlTemplate = function (
    slide: any,
    totalSlides: any,
    colorTemplate: any,
    customStyle: any
  ) {
    const htmlContent = originalGenerateHtml.call(
      this,
      slide,
      totalSlides,
      colorTemplate,
      customStyle
    );

    // –ó–∞–º–µ–Ω—è–µ–º placeholder –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π base64
    if (colorTemplate === ColorTemplate.COSMIC_BLUR) {
      return htmlContent.replace(
        /background: url\('file:\/\/[^']+'\) center\/cover no-repeat/g,
        `background: url('${dataUri}') center/cover no-repeat`
      );
    }

    return htmlContent;
  };

  try {
    console.log('‚ú® –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å base64 —Ñ–æ–Ω–æ–º...');

    const imageBuffers = await canvasService.generateCarouselImages(
      [testSlide],
      undefined,
      ColorTemplate.COSMIC_BLUR
    );

    // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    const resultPath = path.join(outputDir, 'base64-background-test.png');
    fs.writeFileSync(resultPath, imageBuffers[0]);

    const fileSizeKB = Math.round(imageBuffers[0].length / 1024);
    console.log(`  üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω: base64-background-test.png (${fileSizeKB}KB)`);

    console.log(`\nüéâ –¢–µ—Å—Ç —Å base64 –∑–∞–≤–µ—Ä—à–µ–Ω!`);
    console.log(`üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç –≤: ${path.resolve(resultPath)}`);
    console.log(`\nüí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - —Ñ–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤–∏–¥–µ–Ω!`);
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
  } finally {
    // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥
    (canvasService as any).generateHtmlTemplate = originalGenerateHtml;
  }
}

testBlurWithBase64().catch(console.error);
