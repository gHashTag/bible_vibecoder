#!/usr/bin/env bun

/**
 * üé® –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–≤—å—é-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
 * 
 * –°–æ–∑–¥–∞–µ—Ç –º–∏–Ω–∏-–∫–∞—Ä—Ç–æ—á–∫–∏ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –∫–∞–∂–¥–æ–≥–æ —à–∞–±–ª–æ–Ω–∞ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ Telegram
 */

import {
  InstagramCanvasService,
} from '../src/services/instagram-canvas.service';
import { promises as fs } from 'fs';
import path from 'path';
import nodeHtmlToImage from 'node-html-to-image';

/**
 * VibeCoding —Ü–∏—Ç–∞—Ç—ã –¥–ª—è –ø—Ä–µ–≤—å—é
 */
const VIBECODING_QUOTES = [
  '–ö–æ–¥ - —ç—Ç–æ –ø–æ—ç–∑–∏—è –ª–æ–≥–∏–∫–∏ üé≠',
  '–í –∫–∞–∂–¥–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –∂–∏–≤–µ—Ç –¥—É—Ö –ø—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç–∞ üëª',
  '–ß–∏—Å—Ç—ã–π –∫–æ–¥ - –ø—É—Ç—å –∫ –ø—Ä–æ—Å–≤–µ—Ç–ª–µ–Ω–∏—é ‚ú®',
  '–†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ - –º–µ–¥–∏—Ç–∞—Ü–∏—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ üßò‚Äç‚ôÇÔ∏è',
  '–ë–∞–≥–∏ - —É—á–∏—Ç–µ–ª—è —Ç–µ—Ä–ø–µ–Ω–∏—è üêõ',
  'TypeScript - –¥–∏—Å—Ü–∏–ø–ª–∏–Ω–∞ —É–º–∞ üéØ',
  'React —Ö—É–∫–∏ - –º–∞–≥–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π ü™Ñ',
  'Git –∫–æ–º–º–∏—Ç—ã - –∏—Å—Ç–æ—Ä–∏—è –¥—É—à–∏ üìö',
  'API - –º–æ—Å—Ç—ã –º–µ–∂–¥—É –º–∏—Ä–∞–º–∏ üåâ',
  '–ê–ª–≥–æ—Ä–∏—Ç–º—ã - —Ç–∞–Ω–µ—Ü –¥–∞–Ω–Ω—ã—Ö üíÉ'
];

/**
 * –í—ã–±—Ä–∞—Ç—å —Ü–∏—Ç–∞—Ç—É –ø–æ –∏–Ω–¥–µ–∫—Å—É —Ç–µ–º–ø–ª–µ–π—Ç–∞
 */
function getQuoteForTemplate(templateIndex: number): string {
  return VIBECODING_QUOTES[templateIndex % VIBECODING_QUOTES.length];
}

/**
 * –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ü–≤–µ—Ç —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ñ–æ–Ω–∞
 */
function getTextColor(background: string): string {
  // –¢–µ–º–Ω—ã–µ —Ñ–æ–Ω—ã - —Å–≤–µ—Ç–ª—ã–π —Ç–µ–∫—Å—Ç
  if (background.includes('#000') || background.includes('#1') || background.includes('#2') || 
      background.includes('rgba(') && background.includes(', 0') ||
      background.includes('0D2B1D') || background.includes('4A235A') || 
      background.includes('2C3E50') || background.includes('7E102C') ||
      background.includes('1A5276') || background.includes('804E27') ||
      background.includes('0A4D3A')) {
    return '#ffffff';
  }
  // –°–≤–µ—Ç–ª—ã–µ —Ñ–æ–Ω—ã - —Ç–µ–º–Ω—ã–π —Ç–µ–∫—Å—Ç
  return '#2c3e50';
}

/**
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç HTML –¥–ª—è –ø—Ä–µ–≤—å—é-–∫–∞—Ä—Ç–æ—á–∫–∏ —à–∞–±–ª–æ–Ω–∞
 */
function generatePreviewHtml(templateName: string, emoji: string, background: string, cardBackground: string, templateIndex: number): string {
  const quote = getQuoteForTemplate(templateIndex);
  const textColor = getTextColor(background);
  return `
    <!DOCTYPE html>
    <html lang="ru">
    <head>
      <meta charset="UTF-8">
      <meta name="viewport" content="width=device-width, initial-scale=1.0">
      <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&display=swap" rel="stylesheet">
      <style>
        body, html {
          margin: 0;
          padding: 0;
          width: 400px;
          height: 300px;
          font-family: 'Inter', sans-serif;
          background: ${background};
          display: flex;
          justify-content: center;
          align-items: center;
          overflow: hidden;
        }
        
        .preview-card {
          width: 350px;
          height: 250px;
          background: ${cardBackground};
          backdrop-filter: blur(20px);
          -webkit-backdrop-filter: blur(20px);
          border: 1px solid rgba(255, 255, 255, 0.3);
          border-radius: 20px;
          display: flex;
          flex-direction: column;
          justify-content: center;
          align-items: center;
          position: relative;
        }
        
        .emoji {
          font-size: 60px;
          margin-bottom: 15px;
          filter: drop-shadow(0 4px 8px rgba(0, 0, 0, 0.2));
        }
        
        .template-name {
          font-size: 22px;
          font-weight: 700;
          color: ${textColor};
          text-align: center;
          text-shadow: 0 2px 4px rgba(0, 0, 0, 0.3);
          margin-bottom: 8px;
        }
        
        .vibecoding-quote {
          font-size: 12px;
          color: ${textColor};
          opacity: 0.9;
          text-align: center;
          font-style: italic;
          margin-bottom: 8px;
          padding: 0 20px;
          line-height: 1.3;
        }
        
        .preview-label {
          font-size: 11px;
          color: ${textColor};
          opacity: 0.7;
          text-transform: uppercase;
          letter-spacing: 1px;
          font-weight: 600;
        }
        
        .decorative-dot {
          position: absolute;
          top: 20px;
          right: 20px;
          width: 8px;
          height: 8px;
          background: rgba(255, 255, 255, 0.6);
          border-radius: 50%;
        }
        
        .decorative-dot::before {
          content: '';
          position: absolute;
          top: -15px;
          left: 0;
          width: 6px;
          height: 6px;
          background: rgba(255, 255, 255, 0.4);
          border-radius: 50%;
        }
        
        .decorative-dot::after {
          content: '';
          position: absolute;
          top: 15px;
          left: 0;
          width: 4px;
          height: 4px;
          background: rgba(255, 255, 255, 0.3);
          border-radius: 50%;
        }
      </style>
    </head>
    <body>
      <div class="preview-card">
        <div class="decorative-dot"></div>
        <div class="emoji">${emoji}</div>
        <div class="template-name">${templateName}</div>
        <div class="vibecoding-quote">${quote}</div>
        <div class="preview-label">Preview</div>
      </div>
    </body>
    </html>
  `;
}

async function generateTemplatePreviews() {
  console.log('üé® –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–≤—å—é-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤...\n');

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –ø—Ä–µ–≤—å—é
  const previewDir = path.join(process.cwd(), 'template-previews');
  await fs.mkdir(previewDir, { recursive: true });

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã
  const templates = InstagramCanvasService.getColorTemplates();

  console.log('üñºÔ∏è –°–æ–∑–¥–∞—é –ø—Ä–µ–≤—å—é –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ç–µ–º–ø–ª–µ–π—Ç–∞:\n');

  const templateEntries = Object.entries(templates);
  for (let i = 0; i < templateEntries.length; i++) {
    const [templateKey, templateData] = templateEntries[i];
    console.log(`üé® –°–æ–∑–¥–∞—é –ø—Ä–µ–≤—å—é: ${templateData.emoji} ${templateData.name}...`);

    try {
      const html = generatePreviewHtml(
        templateData.name,
        templateData.emoji,
        templateData.background,
        templateData.cardBackground,
        i
      );

      const outputPath = path.join(previewDir, `${templateKey}-preview.png`);

      await nodeHtmlToImage({
        output: outputPath,
        html,
        puppeteerArgs: {
          defaultViewport: {
            width: 400,
            height: 300,
          },
        },
      });

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
      const stats = await fs.stat(outputPath);
      const sizeKB = Math.round(stats.size / 1024);

      console.log(`  ‚úÖ ${templateData.name}: ${sizeKB} KB`);
    } catch (error) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞ –≤ ${templateData.name}:`, error);
    }
  }

  // –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å–Ω—ã–π —Ñ–∞–π–ª —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø—Ä–µ–≤—å—é
  const indexContent = `# üé® –ü—Ä–µ–≤—å—é —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤

–î–∞–Ω–Ω–∞—è –ø–∞–ø–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –ø—Ä–µ–≤—å—é-–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤ Bible VibeCoder.

## üìã –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤:

${Object.entries(templates)
  .map(([key, template]) => `- \`${key}-preview.png\` - ${template.emoji} ${template.name}`)
  .join('\n')}

## üîß –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:

–≠—Ç–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –≤ Telegram-–±–æ—Ç–µ –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤ 
–ø–µ—Ä–µ–¥ –≤—ã–±–æ—Ä–æ–º —Å—Ç–∏–ª—è –∫–∞—Ä—É—Å–µ–ª–∏.

_–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–∫—Ä–∏–ø—Ç–æ–º generate-template-previews.ts_
`;

  await fs.writeFile(path.join(previewDir, 'README.md'), indexContent, 'utf-8');

  console.log('\nüéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø—Ä–µ–≤—å—é –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
  console.log(`üìÅ –í—Å–µ —Ñ–∞–π–ª—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${previewDir}`);
  console.log(`üìä –°–æ–∑–¥–∞–Ω–æ –ø—Ä–µ–≤—å—é: ${Object.keys(templates).length} —à–∞–±–ª–æ–Ω–æ–≤`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateTemplatePreviews().catch(console.error);
