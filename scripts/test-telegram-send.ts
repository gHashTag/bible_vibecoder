#!/usr/bin/env bun

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Telegram
 */

import { readFileSync } from 'fs';
import { join } from 'path';

async function testTelegramSend() {
  console.log('üì± –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram...');

  try {
    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º bot
    const { bot } = await import('../src/bot');

    if (!bot) {
      throw new Error('Telegram bot –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    const botInfo = await bot.telegram.getMe();
    console.log(`ü§ñ Bot: @${botInfo.username} (ID: ${botInfo.id})`);

    // –ß–∏—Ç–∞–µ–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    const outputDir = join(process.cwd(), 'test-output');
    const imageFiles = [
      'slide_1_title.png',
      'slide_2_principle.png',
      'slide_3_quote.png',
      'slide_4_practice.png',
      'slide_5_summary.png',
    ];

    console.log('üìÅ –ß–∏—Ç–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è...');
    const imageBuffers: Buffer[] = [];

    for (const fileName of imageFiles) {
      const filePath = join(outputDir, fileName);
      try {
        const buffer = readFileSync(filePath);
        imageBuffers.push(buffer);
        console.log(`‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω–æ: ${fileName} (${buffer.length} bytes)`);
      } catch (error) {
        console.error(`‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è ${fileName}:`, error);
        return;
      }
    }

    // –í–∞—à Telegram ID (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π)
    const yourTelegramId = 'YOUR_TELEGRAM_ID'; // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π ID

    if (yourTelegramId === 'YOUR_TELEGRAM_ID') {
      console.log('‚ö†Ô∏è –ó–∞–º–µ–Ω–∏—Ç–µ YOUR_TELEGRAM_ID –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π Telegram ID');
      console.log(
        'üí° –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å–≤–æ–π ID, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É –∏ –ø–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –≤ –ª–æ–≥–∏'
      );
      return;
    }

    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—É—Å–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${yourTelegramId}...`);

    // –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—ã –¥–ª—è Telegram
    const mediaGroup = imageBuffers.map((buffer, index) => ({
      type: 'photo' as const,
      media: { source: buffer },
      caption:
        index === 0
          ? `üé® *–¢–µ—Å—Ç–æ–≤–∞—è –∫–∞—Ä—É—Å–µ–ª—å: AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã 2025*\n\nüìä ${imageBuffers.length} —Å–ª–∞–π–¥–æ–≤ –ø–æ VIBECODING\n\nüîó –†–∞–∑–º–µ—Ä: 1080x1350 (–∏–¥–µ–∞–ª—å–Ω–æ –¥–ª—è Instagram)\n\n‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ —Å –±–µ–ª—ã–º —Ñ–æ–Ω–æ–º –∏ —á–µ—Ä–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º`
          : undefined,
    }));

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–¥–∏–∞-–≥—Ä—É–ø–ø—É
    await bot.telegram.sendMediaGroup(yourTelegramId, mediaGroup);
    console.log('‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ Telegram!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ:', error);

    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏
    if (error instanceof Error) {
      console.error('üìù –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.message);
      console.error('üîç Stack trace:', error.stack);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
if (import.meta.main) {
  testTelegramSend();
}

export { testTelegramSend };
