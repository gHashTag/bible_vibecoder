import { InstagramCanvasService } from '../src/services/instagram-canvas.service';
import { CarouselSlide } from '../src/types';
import fs from 'fs';
import path from 'path';

async function generateFullCarousel() {
  console.log('üé® –ì–ï–ù–ï–†–ê–¶–ò–Ø –ü–û–õ–ù–û–ô –ö–ê–†–£–°–ï–õ–ò VIBECODING...');

  try {
    const canvasService = new InstagramCanvasService();

    // –°–æ–∑–¥–∞–µ–º 5 —Å–ª–∞–π–¥–æ–≤ —Å —Å–µ—Ä—å–µ–∑–Ω—ã–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é (–ë–ï–ó –¶–í–ï–¢–û–ß–ö–û–í!)
    const slides: CarouselSlide[] = [
      {
        type: 'title',
        title: 'üöÄ VIBECODING',
        content:
          'üßò‚Äç‚ôÇÔ∏è –ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n‚ö° –û—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–æ–¥—É\n\nüéØ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
        order: 1,
      },
      {
        type: 'principle',
        title: '‚ö° –ü—Ä–∏–Ω—Ü–∏–ø—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏',
        content:
          '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–∞–∫ –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è\n\nüîπ –ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞ - –æ–±–¥—É–º–∞–Ω–Ω–æ–µ —Ä–µ—à–µ–Ω–∏–µ\nüîπ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –º—ã—à–ª–µ–Ω–∏—è –∏ —Ä–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥–∞\nüîπ –ö–∞—á–µ—Å—Ç–≤–æ –ø—Ä–µ–≤—ã—à–µ —Å–∫–æ—Ä–æ—Å—Ç–∏',
        order: 2,
      },
      {
        type: 'quote',
        title: 'üíé –§–∏–ª–æ—Å–æ—Ñ–∏—è –∫–æ–¥–∞',
        content:
          '"–ö–æ–¥ - —ç—Ç–æ —è–∑—ã–∫ –º—ã—Å–ª–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"\n\nüß† –ß–∏—Å—Ç–æ—Ç–∞ –º—ã—à–ª–µ–Ω–∏—è = —á–∏—Å—Ç–æ—Ç–∞ –∫–æ–¥–∞\n‚öôÔ∏è –ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ –æ—Ç—Ä–∞–∂–∞–µ—Ç –ø–æ–Ω–∏–º–∞–Ω–∏–µ',
        order: 3,
      },
      {
        type: 'practice',
        title: 'üõ†Ô∏è –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã',
        content:
          'üî∏ TDD –∫–∞–∫ –æ—Å–Ω–æ–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏\nüî∏ –†–µ—Ñ–∞–∫—Ç–æ—Ä–∏–Ω–≥ –∫–∞–∫ –ø–æ—Å—Ç–æ—è–Ω–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞\nüî∏ Code Review –∫–∞–∫ –æ–±—É—á–µ–Ω–∏–µ\n\nüéØ –°–∏—Å—Ç–µ–º–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–∞—á–µ—Å—Ç–≤—É',
        order: 4,
      },
      {
        type: 'summary',
        title: 'üéØ –†–µ–∑—É–ª—å—Ç–∞—Ç',
        content:
          '–ß–∏—Å—Ç—ã–π –∫–æ–¥ = –ø–æ–Ω—è—Ç–Ω–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞\n\n‚úÖ Red ‚Üí Green ‚Üí Refactor\nüßò‚Äç‚ôÇÔ∏è –û—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç—å –≤ –∫–∞–∂–¥–æ–º –∫–æ–º–º–∏—Ç–µ\n\n‚ö° –ù–∞—á–Ω–∏ –ø—Ä–∏–º–µ–Ω—è—Ç—å —Å–µ–≥–æ–¥–Ω—è!',
        order: 5,
      },
    ];

    console.log(`üìù –°–æ–∑–¥–∞–Ω–æ ${slides.length} —Å–ª–∞–π–¥–æ–≤ –¥–ª—è –∫–∞—Ä—É—Å–µ–ª–∏`);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    console.log('üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–∞—Ä—É—Å–µ–ª–∏...');
    const imageBuffers = await canvasService.generateCarouselImages(slides);

    if (imageBuffers && imageBuffers.length > 0) {
      // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –≤—ã–≤–æ–¥–∞
      const outputPath = path.join(process.cwd(), 'carousel-output');
      if (!fs.existsSync(outputPath)) {
        fs.mkdirSync(outputPath, { recursive: true });
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      let totalSize = 0;
      for (let i = 0; i < imageBuffers.length; i++) {
        const imagePath = path.join(
          outputPath,
          `vibecoding-slide-${i + 1}.png`
        );
        fs.writeFileSync(imagePath, imageBuffers[i]);

        const stats = fs.statSync(imagePath);
        totalSize += stats.size;

        console.log(
          `‚úÖ –°–ª–∞–π–¥ ${i + 1}: ${(stats.size / 1024).toFixed(2)} KB - ${
            slides[i].title
          }`
        );
      }

      console.log('\nüéâ –ö–ê–†–£–°–ï–õ–¨ –ì–û–¢–û–í–ê!');
      console.log(`üìÅ –ü–∞–ø–∫–∞: ${outputPath}`);
      console.log(`üìä –í—Å–µ–≥–æ —Ñ–∞–π–ª–æ–≤: ${imageBuffers.length}`);
      console.log(`üíæ –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ${(totalSize / 1024).toFixed(2)} KB`);
      console.log(`üé® –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ: 1080x1350`);
      console.log('\nüöÄ –ì–û–¢–û–í–û –î–õ–Ø INSTAGRAM! –ó–∞–≥—Ä—É–∂–∞–π –∫–∞—Ä—É—Å–µ–ª—å!');

      // –¢–ï–°–¢: –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ä—É—Å–µ–ª—å –Ω–∞ —Ç–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π ID
      console.log('\nüì± –¢–ï–°–¢–ò–†–£–Æ –û–¢–ü–†–ê–í–ö–£ –ù–ê –¢–í–û–ô ID...');
      await testSendToRealUser(imageBuffers, slides);
    } else {
      console.error('‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ —Å–æ–∑–¥–∞–Ω—ã');
    }
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏:');
    console.error(error);
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID
async function testSendToRealUser(
  imageBuffers: Buffer[],
  slides: CarouselSlide[]
) {
  try {
    const { bot } = await import('../src/bot');

    const realUserId = 144022504; // –¢–≤–æ–π —Ä–µ–∞–ª—å–Ω—ã–π ID

    // –°–æ–∑–¥–∞–µ–º –º–µ–¥–∏–∞ –≥—Ä—É–ø–ø—É –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
    const mediaGroup = imageBuffers.map((buffer, index) => ({
      type: 'photo' as const,
      media: { source: buffer },
      caption:
        index === 0
          ? `üöÄ VIBECODING –ö–∞—Ä—É—Å–µ–ª—å\n\n${slides
              .map(s => `${s.order}. ${s.title}`)
              .join('\n')}`
          : undefined,
      parse_mode: 'Markdown' as const,
    }));

    console.log(`üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é –∫–∞—Ä—É—Å–µ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${realUserId}...`);

    await bot.telegram.sendMediaGroup(realUserId, mediaGroup);

    console.log('‚úÖ –ö–ê–†–£–°–ï–õ–¨ –£–°–ü–ï–®–ù–û –û–¢–ü–†–ê–í–õ–ï–ù–ê –ù–ê –¢–í–û–ô ID!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π ID:', error);
    console.log('ÔøΩÔøΩ Fallback: –û—Ç–ø—Ä–∞–≤–ª—è—é —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...');

    try {
      const { bot } = await import('../src/bot');
      const realUserId = 144022504;

      const textMessage = `üöÄ **VIBECODING –ö–∞—Ä—É—Å–µ–ª—å –≥–æ—Ç–æ–≤–∞!**\n\n${slides
        .map(s => `**${s.order}. ${s.title}**\n${s.content}\n`)
        .join('\n---\n\n')}`;

      await bot.telegram.sendMessage(realUserId, textMessage, {
        parse_mode: 'Markdown',
      });
      console.log('‚úÖ –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } catch (fallbackError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ fallback –æ—Ç–ø—Ä–∞–≤–∫–∏:', fallbackError);
    }
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é
generateFullCarousel();
