#!/usr/bin/env bun

/**
 * üîç Direct Apify API Test
 *
 * –ü—Ä—è–º–æ–π —Ç–µ—Å—Ç Apify Google Search API –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç–æ–∫–µ–Ω–∞
 * –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
 */

async function testApifyDirect() {
  console.log('üîç === Direct Apify API Test ===\n');

  const apifyToken = process.env.APIFY_TOKEN;

  if (!apifyToken) {
    console.error('‚ùå APIFY_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è');
    console.log('üí° –î–æ–±–∞–≤—å—Ç–µ APIFY_TOKEN=your_token –≤ .env —Ñ–∞–π–ª');
    return;
  }

  console.log('‚úÖ APIFY_TOKEN –Ω–∞–π–¥–µ–Ω');
  console.log(
    `üîë Token: ${apifyToken.slice(0, 10)}...${apifyToken.slice(-5)}\n`
  );

  try {
    console.log('üöÄ –¢–µ—Å—Ç–∏—Ä—É–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å Apify API...');

    // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å API
    const pingResponse = await fetch('https://api.apify.com/v2/acts', {
      headers: {
        Authorization: `Bearer ${apifyToken}`,
      },
    });

    if (!pingResponse.ok) {
      throw new Error(
        `API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: ${pingResponse.status} ${pingResponse.statusText}`
      );
    }

    console.log('‚úÖ Apify API –¥–æ—Å—Ç—É–ø–µ–Ω');

    // –¢–µ–ø–µ—Ä—å —Ç–µ—Å—Ç–∏—Ä—É–µ–º Google Search actor
    const actorId = 'apify/google-search-results-scraper';
    const testQuery = 'VibeCoding –º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ';

    console.log(`\nüîç –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫: "${testQuery}"`);
    console.log('‚è≥ –ó–∞–ø—É—Å–∫–∞–µ–º Google Search actor...');

    const runInput = {
      queries: [testQuery],
      maxPagesPerQuery: 1,
      resultsPerPage: 3,
      languageCode: 'ru',
      countryCode: 'RU',
      includeSnippets: true,
      csvFriendlyOutput: false,
    };

    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–∫—Ç–æ—Ä
    const runResponse = await fetch(
      `https://api.apify.com/v2/acts/${actorId}/runs`,
      {
        method: 'POST',
        headers: {
          Authorization: `Bearer ${apifyToken}`,
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(runInput),
      }
    );

    if (!runResponse.ok) {
      const errorText = await runResponse.text();
      throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: ${runResponse.status} ${errorText}`);
    }

    const runData = await runResponse.json();
    const runId = runData.data.id;
    console.log(`‚úÖ Actor –∑–∞–ø—É—â–µ–Ω, Run ID: ${runId}`);

    // –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    console.log('‚è≥ –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è (–º–∞–∫—Å–∏–º—É–º 60 —Å–µ–∫—É–Ω–¥)...');
    let attempts = 0;
    const maxAttempts = 30; // 30 * 2 = 60 —Å–µ–∫—É–Ω–¥
    let runStatus = 'RUNNING';

    while (runStatus === 'RUNNING' && attempts < maxAttempts) {
      await new Promise(resolve => setTimeout(resolve, 2000));

      const statusResponse = await fetch(
        `https://api.apify.com/v2/acts/${actorId}/runs/${runId}`,
        {
          headers: {
            Authorization: `Bearer ${apifyToken}`,
          },
        }
      );

      if (statusResponse.ok) {
        const statusData = await statusResponse.json();
        runStatus = statusData.data.status;
        console.log(`   üìä Status: ${runStatus} (–ø–æ–ø—ã—Ç–∫–∞ ${attempts + 1})`);
      }

      attempts++;
    }

    if (runStatus !== 'SUCCEEDED') {
      throw new Error(
        `Run –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ: ${runStatus} –ø–æ—Å–ª–µ ${attempts} –ø–æ–ø—ã—Ç–æ–∫`
      );
    }

    console.log('‚úÖ Actor –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —É—Å–ø–µ—à–Ω–æ!');

    // –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('üì• –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...');
    const resultsResponse = await fetch(
      `https://api.apify.com/v2/acts/${actorId}/runs/${runId}/dataset/items`,
      {
        headers: {
          Authorization: `Bearer ${apifyToken}`,
        },
      }
    );

    if (!resultsResponse.ok) {
      throw new Error(
        `–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${resultsResponse.status}`
      );
    }

    const results = await resultsResponse.json();
    console.log(`üìä –ü–æ–ª—É—á–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${results.length}`);

    if (results.length > 0) {
      console.log('\nüéØ === –ü—Ä–∏–º–µ—Ä—ã —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ ===');

      results.slice(0, 3).forEach((result: any, index: number) => {
        console.log(`\n${index + 1}. ${result.title || '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞'}`);
        console.log(`   üîó URL: ${result.url || '–ë–µ–∑ URL'}`);
        console.log(
          `   üìù –û–ø–∏—Å–∞–Ω–∏–µ: ${(result.description || '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è').slice(0, 100)}...`
        );

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—è
        const fields = Object.keys(result);
        console.log(`   üìã –ü–æ–ª—è: ${fields.join(', ')}`);
      });

      console.log('\n‚úÖ === –¢–µ—Å—Ç Apify API —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ω ===');
      console.log(`üéâ –ü–æ–ª—É—á–µ–Ω–æ ${results.length} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞`);
      console.log('üöÄ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å VibeCoding Research Agent –≥–æ—Ç–æ–≤–∞!');
    } else {
      console.log('‚ö†Ô∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—É—Å—Ç—ã–µ, –Ω–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç');
    }

    // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–∞—Ö
    try {
      const statsResponse = await fetch(
        `https://api.apify.com/v2/acts/${actorId}/runs/${runId}`,
        {
          headers: {
            Authorization: `Bearer ${apifyToken}`,
          },
        }
      );

      if (statsResponse.ok) {
        const statsData = await statsResponse.json();
        const stats = statsData.data.stats;

        console.log('\nüìä === –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ===');
        console.log(
          `‚è±Ô∏è –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${stats.runTimeSecs || 'N/A'} —Å–µ–∫—É–Ω–¥`
        );
        console.log(`üí∞ Compute units: ${stats.computeUnits || 'N/A'}`);
        console.log(
          `üìà Data transfer: ${stats.datasetItems || 'N/A'} —ç–ª–µ–º–µ–Ω—Ç–æ–≤`
        );
      }
    } catch (statsError) {
      console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è');
    }
  } catch (error) {
    console.error(
      '‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è Apify API:',
      error instanceof Error ? error.message : error
    );

    if (error instanceof Error && error.message.includes('401')) {
      console.log('\nüí° –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã –æ—à–∏–±–∫–∏ 401:');
      console.log('   ‚Ä¢ –ù–µ–≤–µ—Ä–Ω—ã–π APIFY_TOKEN');
      console.log('   ‚Ä¢ –¢–æ–∫–µ–Ω –∏—Å—Ç–µ–∫');
      console.log('   ‚Ä¢ –ù–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ Google Search actor');
    }

    if (error instanceof Error && error.message.includes('402')) {
      console.log('\nüí° –û—à–∏–±–∫–∞ 402 - –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –∞–∫–∫–∞—É–Ω—Ç–µ Apify');
    }
  }
}

console.log('üïâÔ∏è VibeCoding x Apify Integration Test\n');
testApifyDirect().catch(console.error);
