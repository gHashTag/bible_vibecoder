-- üïâÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ë–∏–±–ª–∏–∏ Vibecoding
-- "‡§∏‡§§‡•ç‡§Ø‡§Æ‡•á‡§µ ‡§ú‡§Ø‡§§‡•á" - –ò—Å—Ç–∏–Ω–∞ –≤—Å–µ–≥–¥–∞ –ø–æ–±–µ–∂–¥–∞–µ—Ç

-- –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ pgvector –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –≤–µ–∫—Ç–æ—Ä–Ω—ã–º–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞–º–∏
CREATE EXTENSION IF NOT EXISTS vector;

-- –°–æ–∑–¥–∞–µ–º —Å—Ö–µ–º—É –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö Vibecoding
CREATE SCHEMA IF NOT EXISTS vibecoding_vectors;

-- –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞–Ω–∫–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –≤–µ–∫—Ç–æ—Ä–Ω—ã–º–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞–º–∏
CREATE TABLE IF NOT EXISTS vibecoding_vectors.document_chunks (
    -- –û—Å–Ω–æ–≤–Ω—ã–µ –ø–æ–ª—è
    id SERIAL PRIMARY KEY,
    source_file VARCHAR(255) NOT NULL,        -- –ò–º—è –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    source_path TEXT NOT NULL,                -- –ü–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    chunk_index INTEGER NOT NULL,             -- –ò–Ω–¥–µ–∫—Å —á–∞–Ω–∫–∞ –≤ —Ñ–∞–π–ª–µ
    
    -- –ö–æ–Ω—Ç–µ–Ω—Ç
    title TEXT,                               -- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å–µ–∫—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å)
    content TEXT NOT NULL,                    -- –¢–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —á–∞–Ω–∫–∞
    
    -- –í–µ–∫—Ç–æ—Ä–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    embedding vector(1536) NOT NULL,          -- OpenAI text-embedding-3-small (1536 —Ä–∞–∑–º–µ—Ä–Ω–æ—Å—Ç—å)
    
    -- –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
    metadata JSONB DEFAULT '{}',              -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ (–∫–∞—Ç–µ–≥–æ—Ä–∏—è, —Ç–∏–ø —Å–µ–∫—Ü–∏–∏ –∏ —Ç.–¥.)
    token_count INTEGER NOT NULL DEFAULT 0,   -- –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç–æ–∫–µ–Ω–æ–≤ –≤ —á–∞–Ω–∫–µ
    chunk_hash CHAR(64) NOT NULL,             -- SHA256 —Ö–µ—à –¥–ª—è –¥–µ–¥—É–ø–ª–∏–∫–∞—Ü–∏–∏
    
    -- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    -- –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è
    UNIQUE(source_path, chunk_index),         -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ –ø—É—Ç–∏ –∏ –∏–Ω–¥–µ–∫—Å—É
    UNIQUE(chunk_hash)                        -- –£–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å –ø–æ —Ö–µ—à—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
);

-- –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–∞

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –≤–µ–∫—Ç–æ—Ä–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ (cosine similarity)
CREATE INDEX IF NOT EXISTS idx_vibecoding_embedding_cosine 
ON vibecoding_vectors.document_chunks 
USING ivfflat (embedding vector_cosine_ops) 
WITH (lists = 100);

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –ø–æ–ª–Ω–æ—Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –ø–æ–∏—Å–∫–∞ –ø–æ —Ä—É—Å—Å–∫–æ–º—É —è–∑—ã–∫—É
CREATE INDEX IF NOT EXISTS idx_vibecoding_content_fts 
ON vibecoding_vectors.document_chunks 
USING gin(to_tsvector('russian', content));

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_vibecoding_source_file 
ON vibecoding_vectors.document_chunks(source_file);

CREATE INDEX IF NOT EXISTS idx_vibecoding_source_path 
ON vibecoding_vectors.document_chunks(source_path);

-- –ò–Ω–¥–µ–∫—Å—ã –¥–ª—è –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö (JSONB)
CREATE INDEX IF NOT EXISTS idx_vibecoding_metadata_category 
ON vibecoding_vectors.document_chunks 
USING gin((metadata->'file_category'));

CREATE INDEX IF NOT EXISTS idx_vibecoding_metadata_section_type 
ON vibecoding_vectors.document_chunks 
USING gin((metadata->'section_type'));

-- –ò–Ω–¥–µ–∫—Å –¥–ª—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –º–µ—Ç–æ–∫
CREATE INDEX IF NOT EXISTS idx_vibecoding_created_at 
ON vibecoding_vectors.document_chunks(created_at);

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_vibecoding_updated_at()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
DROP TRIGGER IF EXISTS trigger_update_vibecoding_updated_at 
ON vibecoding_vectors.document_chunks;

CREATE TRIGGER trigger_update_vibecoding_updated_at
    BEFORE UPDATE ON vibecoding_vectors.document_chunks
    FOR EACH ROW
    EXECUTE FUNCTION update_vibecoding_updated_at();

-- –°–æ–∑–¥–∞–µ–º view –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
CREATE OR REPLACE VIEW vibecoding_vectors.stats_overview AS
SELECT 
    COUNT(*) as total_chunks,
    COUNT(DISTINCT source_path) as total_files,
    AVG(token_count) as avg_tokens_per_chunk,
    MIN(token_count) as min_tokens,
    MAX(token_count) as max_tokens,
    COUNT(DISTINCT metadata->>'file_category') as unique_categories,
    COUNT(DISTINCT metadata->>'section_type') as unique_section_types,
    MIN(created_at) as first_indexed,
    MAX(updated_at) as last_updated
FROM vibecoding_vectors.document_chunks;

-- –°–æ–∑–¥–∞–µ–º view –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
CREATE OR REPLACE VIEW vibecoding_vectors.category_stats AS
SELECT 
    metadata->>'file_category' as category,
    COUNT(*) as chunk_count,
    AVG(token_count) as avg_tokens,
    COUNT(DISTINCT source_path) as file_count
FROM vibecoding_vectors.document_chunks
WHERE metadata->>'file_category' IS NOT NULL
GROUP BY metadata->>'file_category'
ORDER BY chunk_count DESC;

-- –°–æ–∑–¥–∞–µ–º view –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø–æ —Ç–∏–ø–∞–º —Å–µ–∫—Ü–∏–π
CREATE OR REPLACE VIEW vibecoding_vectors.section_type_stats AS
SELECT 
    metadata->>'section_type' as section_type,
    COUNT(*) as chunk_count,
    AVG(token_count) as avg_tokens,
    COUNT(DISTINCT source_path) as file_count
FROM vibecoding_vectors.document_chunks
WHERE metadata->>'section_type' IS NOT NULL
GROUP BY metadata->>'section_type'
ORDER BY chunk_count DESC;

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å—Ç–∞—Ä—ã—Ö –≤–µ–∫—Ç–æ—Ä–æ–≤ (–¥–ª—è –ø–µ—Ä–µ–∏–Ω–¥–µ–∫—Å–∞—Ü–∏–∏)
CREATE OR REPLACE FUNCTION vibecoding_vectors.cleanup_old_vectors(
    older_than_days INTEGER DEFAULT 7
) RETURNS INTEGER AS $$
DECLARE
    deleted_count INTEGER;
BEGIN
    DELETE FROM vibecoding_vectors.document_chunks 
    WHERE updated_at < NOW() - (older_than_days || ' days')::INTERVAL;
    
    GET DIAGNOSTICS deleted_count = ROW_COUNT;
    RETURN deleted_count;
END;
$$ LANGUAGE plpgsql;

-- –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –¥–ª—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏
COMMENT ON SCHEMA vibecoding_vectors IS '–°—Ö–µ–º–∞ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤–µ–∫—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –ë–∏–±–ª–∏–∏ Vibecoding';
COMMENT ON TABLE vibecoding_vectors.document_chunks IS '–ß–∞–Ω–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —Å –≤–µ–∫—Ç–æ—Ä–Ω—ã–º–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–∞–º–∏ –¥–ª—è —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–æ–∏—Å–∫–∞';
COMMENT ON COLUMN vibecoding_vectors.document_chunks.embedding IS '–í–µ–∫—Ç–æ—Ä–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ —á–µ—Ä–µ–∑ OpenAI text-embedding-3-small (1536 –∏–∑–º–µ—Ä–µ–Ω–∏–π)';
COMMENT ON COLUMN vibecoding_vectors.document_chunks.metadata IS 'JSON –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: file_category, section_type, –∏ –¥—Ä—É–≥–∏–µ –∞—Ç—Ä–∏–±—É—Ç—ã';
COMMENT ON COLUMN vibecoding_vectors.document_chunks.chunk_hash IS 'SHA256 —Ö–µ—à —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è';

-- –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ–∑–¥–∞–Ω–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–µ
SELECT '–í–µ–∫—Ç–æ—Ä–Ω–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö Vibecoding —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞! üïâÔ∏è' as status;
SELECT * FROM vibecoding_vectors.stats_overview;
