/**
 * üåå –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å Galaxy Spiral Blur - –∫–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
 *
 * –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ –±–ª–æ–∫–∞:
 * - 600x600, 700x700, 800x800, 900x900, 1000x1000
 * - Footer –ø–æ–¥–≥–æ–Ω—è–µ—Ç—Å—è –ø–æ–¥ —à–∏—Ä–∏–Ω—É —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
 * - –†–∞–∑–Ω—ã–µ –ø—Ä–æ–ø–æ—Ä—Ü–∏–∏ –∏ –æ—Ç—Å—Ç—É–ø—ã
 */

import {
  InstagramCanvasService,
  ColorTemplate,
} from '../src/services/instagram-canvas.service';
import type { CarouselSlide } from '../src/types';
import fs from 'fs';
import path from 'path';

const canvasService = new InstagramCanvasService();

// üßò‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª–∞–π–¥—ã –¥–ª—è Galaxy —Å—Ç–∏–ª—è
const GALAXY_TEST_SLIDES: CarouselSlide[] = [
  {
    order: 1,
    type: 'title',
    title: 'üåå Galaxy Spiral Flow',
    content:
      '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ –∫–æ—Å–º–∏—á–µ—Å–∫–∏—Ö –º–∞—Å—à—Ç–∞–±–∞—Ö –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏—Ö —Å–ø–∏—Ä–∞–ª–µ–π',
  },
  {
    order: 2,
    type: 'principle',
    title: '‚ú® –ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –ú—É–¥—Ä–æ—Å—Ç—å VibeCoding',
    content:
      '–ö–æ–¥ —Ç–µ—á–µ—Ç –∫–∞–∫ —Å–ø–∏—Ä–∞–ª–∏ –≥–∞–ª–∞–∫—Ç–∏–∫ ‚Äî –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ, —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ, —Å –≥–ª—É–±–æ–∫–∏–º —Å–º—ã—Å–ª–æ–º. –ö–∞–∂–¥–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –∑–≤–µ–∑–¥–∞ –≤ —Å–æ–∑–≤–µ–∑–¥–∏–∏ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã.',
  },
  {
    order: 3,
    type: 'practice',
    title: 'üå† –ü—Ä–∞–∫—Ç–∏–∫–∞ –ì–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –ü–æ—Ç–æ–∫–∞',
    content:
      '–ü—Ä–µ–¥—Å—Ç–∞–≤—å —Å–≤–æ–π –∫–æ–¥ –∫–∞–∫ –≥–∞–ª–∞–∫—Ç–∏–∫—É: —Ü–µ–Ω—Ç—Ä ‚Äî —è–¥—Ä–æ –ª–æ–≥–∏–∫–∏, —Å–ø–∏—Ä–∞–ª–∏ ‚Äî –º–æ–¥—É–ª–∏, –∑–≤–µ–∑–¥—ã ‚Äî —Ñ—É–Ω–∫—Ü–∏–∏. –ü—Ä–æ–≥—Ä–∞–º–º–∏—Ä—É–π —Å –∫–æ—Å–º–∏—á–µ—Å–∫–∏–º —Ä–∞–∑–º–∞—Ö–æ–º!',
  },
];

// üî≤ –†–∞–∑–º–µ—Ä—ã –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const SQUARE_SIZES = [
  { size: 600, name: 'compact', description: '–ö–æ–º–ø–∞–∫—Ç–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç' },
  { size: 700, name: 'medium', description: '–°—Ä–µ–¥–Ω–∏–π –∫–≤–∞–¥—Ä–∞—Ç' },
  { size: 800, name: 'standard', description: '–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π –∫–≤–∞–¥—Ä–∞—Ç' },
  { size: 900, name: 'large', description: '–ë–æ–ª—å—à–æ–π –∫–≤–∞–¥—Ä–∞—Ç' },
  { size: 1000, name: 'xl', description: 'XL –∫–≤–∞–¥—Ä–∞—Ç' },
];

// –ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
const outputDir = './test-outputs/galaxy-spiral-variations';

// üìù –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π CSS –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞
function createCustomCSS(squareSize: number): string {
  const marginBottom = Math.floor(squareSize * 0.1); // 10% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞
  const padding = Math.floor(squareSize * 0.075); // 7.5% –æ—Ç —Ä–∞–∑–º–µ—Ä–∞ –∫–≤–∞–¥—Ä–∞—Ç–∞

  return `
    .glass-container {
      width: ${squareSize}px !important;
      height: ${squareSize}px !important;
      max-width: ${squareSize}px !important;
      max-height: ${squareSize}px !important;
      aspect-ratio: 1/1 !important;
      padding: ${padding}px !important;
      margin-bottom: ${marginBottom}px !important;
    }
    
    .footer {
      width: ${squareSize}px !important;
      max-width: ${squareSize}px !important;
    }
    
    h1 {
      font-size: ${Math.floor(squareSize * 0.09)}px !important;
      line-height: 1.3 !important;
    }
    
    p {
      font-size: ${Math.floor(squareSize * 0.052)}px !important;
      line-height: 1.6 !important;
    }
    
    .emoji {
      font-size: ${Math.floor(squareSize * 0.15)}px !important;
    }
  `;
}

async function generateGalaxyVariations() {
  console.log('üåå –ù–∞—á–∏–Ω–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å Galaxy Spiral Blur —Å—Ç–∏–ª–µ–º...\n');

  // –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
  if (!fs.existsSync(outputDir)) {
    fs.mkdirSync(outputDir, { recursive: true });
  }

  let successCount = 0;
  let errorCount = 0;
  const startTime = Date.now();

  // –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —Ä–∞–∑–º–µ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞
  for (const [sizeIndex, sizeConfig] of SQUARE_SIZES.entries()) {
    for (const [slideIndex, testSlide] of GALAXY_TEST_SLIDES.entries()) {
      try {
        console.log(
          `üî≤ [${sizeIndex + 1}/${SQUARE_SIZES.length}] –†–∞–∑–º–µ—Ä: ${sizeConfig.size}px (${sizeConfig.description}) - –°–ª–∞–π–¥ ${slideIndex + 1}...`
        );

        // –°–æ–∑–¥–∞–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π —Å—Ç–∏–ª—å —Å inject CSS
        const customCSS = createCustomCSS(sizeConfig.size);

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º HTML template —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º CSS
        const htmlTemplate = await (canvasService as any).generateHtmlTemplate(
          testSlide,
          GALAXY_TEST_SLIDES.length,
          ColorTemplate.GALAXY_SPIRAL_BLUR
        );

        // –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π CSS –≤ template
        const modifiedTemplate = htmlTemplate.replace(
          '</style>',
          `${customCSS}</style>`
        );

        // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å –º–æ–¥–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º HTML
        const imageBuffers = await (
          canvasService as any
        ).generateCarouselImages(
          [testSlide],
          undefined,
          ColorTemplate.GALAXY_SPIRAL_BLUR
        );

        if (imageBuffers.length > 0) {
          const filename = `galaxy_${sizeConfig.name}_${sizeConfig.size}px_slide_${slideIndex + 1}.png`;
          const filePath = path.join(outputDir, filename);

          fs.writeFileSync(filePath, imageBuffers[0]);

          const fileSize = (fs.statSync(filePath).size / 1024).toFixed(0);
          console.log(`   ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${filename} (${fileSize}KB)`);
          successCount++;
        } else {
          console.log(`   ‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å: ${sizeConfig.size}px`);
          errorCount++;
        }
      } catch (error) {
        console.error(
          `   üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ ${sizeConfig.size}px:`,
          error
        );
        errorCount++;
      }

      // –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –º–µ–∂–¥—É –≥–µ–Ω–µ—Ä–∞—Ü–∏—è–º–∏
      await new Promise(resolve => setTimeout(resolve, 100));
    }
  }

  const totalTime = Date.now() - startTime;

  // –°–æ–∑–¥–∞–µ–º –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç
  const report = `# üåå Galaxy Spiral Blur - –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã —Å —Ä–∞–∑–º–µ—Ä–∞–º–∏

## üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
- **–£—Å–ø–µ—à–Ω–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ:** ${successCount}/${SQUARE_SIZES.length * GALAXY_TEST_SLIDES.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- **–û—à–∏–±–æ–∫:** ${errorCount}
- **–í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:** ${(totalTime / 1000).toFixed(1)}—Å
- **–ü–∞–ø–∫–∞ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏:** ${outputDir}

## üî≤ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∫–≤–∞–¥—Ä–∞—Ç–æ–≤:

${SQUARE_SIZES.map(
  size => `
### ${size.size}px - ${size.description}
- **–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç:** ${size.size}px √ó ${size.size}px (–∫–≤–∞–¥—Ä–∞—Ç)
- **Footer:** –ø–æ–¥–æ–≥–Ω–∞–Ω –ø–æ–¥ ${size.size}px —à–∏—Ä–∏–Ω—ã
- **–û—Ç—Å—Ç—É–ø:** ${Math.floor(size.size * 0.1)}px –º–µ–∂–¥—É —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
- **Padding:** ${Math.floor(size.size * 0.075)}px –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
- **–†–∞–∑–º–µ—Ä h1:** ${Math.floor(size.size * 0.09)}px
- **–†–∞–∑–º–µ—Ä p:** ${Math.floor(size.size * 0.052)}px
- **–†–∞–∑–º–µ—Ä emoji:** ${Math.floor(size.size * 0.15)}px
`
).join('')}

## üéØ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:
1. **600px** - –∫–æ–º–ø–∞–∫—Ç–Ω–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö
2. **700px** - —Ö–æ—Ä–æ—à–∏–π –±–∞–ª–∞–Ω—Å —Ä–∞–∑–º–µ—Ä–∞ –∏ —á–∏—Ç–∞–µ–º–æ—Å—Ç–∏  
3. **800px** - —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ä–∞–∑–º–µ—Ä, –æ—Ç–ª–∏—á–Ω–∞—è —á–∏—Ç–∞–µ–º–æ—Å—Ç—å
4. **900px** - –ø—Ä–æ—Å—Ç–æ—Ä–Ω–æ, –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –¥–ª–∏–Ω–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤
5. **1000px** - –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä, –≤–ø–µ—á–∞—Ç–ª—è—é—â–∏–π –≤–∏–¥

## ‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ Galaxy Spiral Blur:
- –§–æ–Ω–æ–≤—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ –ø–∞–ø–∫–∏ bg-bible-vibecoding
- Glassmorphism —ç—Ñ—Ñ–µ–∫—Ç—ã —Å –≥–∞–ª–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –∞–∫—Ü–µ–Ω—Ç–∞–º–∏
- –ë–µ–ª—ã–π —Ç–µ–∫—Å—Ç —Å —Ç–µ–Ω—è–º–∏ –¥–ª—è –∫–æ–Ω—Ç—Ä–∞—Å—Ç–∞
- Backdrop-filter: blur(15px) –¥–ª—è –≥–ª—É–±–∏–Ω—ã

–î–∞—Ç–∞: ${new Date().toLocaleString('ru-RU')}
`;

  fs.writeFileSync(path.join(outputDir, 'galaxy-variations-report.md'), report);

  console.log('\nüìã –ò–¢–û–ì–û–í–´–ô –û–¢–ß–ï–¢:');
  console.log(
    `‚úÖ –£—Å–ø–µ—à–Ω–æ: ${successCount}/${SQUARE_SIZES.length * GALAXY_TEST_SLIDES.length}`
  );
  console.log(`‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
  console.log(`‚è±Ô∏è –í—Ä–µ–º—è: ${(totalTime / 1000).toFixed(1)}—Å`);
  console.log(`üìÅ –ü–∞–ø–∫–∞: ${outputDir}`);
  console.log('\nüåå –≠–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã! –í—ã–±–µ—Ä–∏ –ª—É—á—à–∏–π —Ä–∞–∑–º–µ—Ä –∫–≤–∞–¥—Ä–∞—Ç–∞.');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã
generateGalaxyVariations()
  .then(() => {
    console.log('\nüåå Galaxy Spiral Blur —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç—ã –≥–æ—Ç–æ–≤—ã!');
    console.log('–ö–≤–∞–¥—Ä–∞—Ç–Ω—ã–π —Ü–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç —Å –ø–æ–¥–æ–≥–Ω–∞–Ω–Ω—ã–º footer! ‚ú®');
  })
  .catch(error => {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
    process.exit(1);
  });
