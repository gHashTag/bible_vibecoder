#!/usr/bin/env bun

/**
 * üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
 *
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ –æ–¥–Ω–æ–º—É —Å–ª–∞–π–¥—É –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —Ü–≤–µ—Ç–æ–≤–æ–≥–æ —Ç–µ–º–ø–ª–µ–π—Ç–∞
 * –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–∞–∑–ª–∏—á–∏–π –≤ –¥–∏–∑–∞–π–Ω–µ.
 */

import { CarouselContentGeneratorService } from '../src/services/carousel-content-generator.service';
import {
  InstagramCanvasService,
  ColorTemplate,
} from '../src/services/instagram-canvas.service';
// import { logger, LogType } from '../src/utils/logger'; // Unused import commented out

const contentGenerator = new CarouselContentGeneratorService();
const canvasService = new InstagramCanvasService();

async function testColorTemplates() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤...\n');

  const topic = '–∫—Ä–∞—Å–æ—Ç–∞ –¥–∏–∑–∞–π–Ω–∞';

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–¥–∏–Ω —Å–ª–∞–π–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
  console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–ª–∞–π–¥...');
  const slides = await contentGenerator.generateCarouselSlides(topic);

  if (!slides || slides.length === 0) {
    console.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–ª–∞–π–¥—ã');
    process.exit(1);
  }

  // –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤
  const testSlide = slides[0];
  console.log(`‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π —Å–ª–∞–π–¥: "${testSlide.title}"\n`);

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã
  const templates = InstagramCanvasService.getColorTemplates();

  console.log('üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤:\n');

  for (const [colorKey, template] of Object.entries(templates)) {
    const colorTemplate = colorKey as ColorTemplate;

    try {
      console.log(`üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é: ${template.emoji} ${template.name}...`);

      const imagePaths = await canvasService.generateCarouselImageFiles(
        [testSlide],
        undefined,
        colorTemplate
      );

      // –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è —Ä–∞–∑–ª–∏—á–µ–Ω–∏—è
      const fs = await import('fs/promises');
      const newPath = `./carousel-output/template-${colorKey}-${testSlide.title.replace(/[^a-zA-Z0-9]/g, '-').toLowerCase()}.png`;

      await fs.rename(imagePaths[0], newPath);

      const stats = await fs.stat(newPath);
      console.log(
        `  ‚úÖ –°–æ–∑–¥–∞–Ω: ${newPath} (${Math.round(stats.size / 1024)} KB)`
      );
    } catch (error) {
      console.error(`  ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è —Ç–µ–º–ø–ª–µ–π—Ç–∞ ${template.name}:`, error);
    }
  }

  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log(
    'üìÅ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–∞–ø–∫—É ./carousel-output/ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö —Ü–≤–µ—Ç–æ–≤—ã—Ö –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤'
  );

  // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã
  console.log('\nüìã –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ü–≤–µ—Ç–æ–≤—ã–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã:');
  Object.entries(templates).forEach(([key, template]) => {
    console.log(`  ${template.emoji} ${template.name} (${key})`);
  });
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testColorTemplates()
  .then(() => {
    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  })
  .catch(error => {
    console.error('\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  });
