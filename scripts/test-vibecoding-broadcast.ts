#!/usr/bin/env bun

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ VibeCoding
 *
 * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
 * 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
 * 2. –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
 * 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—é —Å–ª—É—á–∞–π–Ω–æ–π —Ç–µ–º—ã
 * 4. –°–æ–∑–¥–∞–Ω–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏ –∏–∑ VibeCoding –∑–Ω–∞–Ω–∏–π
 * 5. –¢–µ—Å—Ç–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –æ–¥–Ω–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
 * 6. –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Inngest
 */

import { join } from 'path';
import { promises as fs } from 'fs';
import { db } from '../src/db';
import { users, userSettings } from '../src/db/schema';
import { eq, and, isNotNull, or, isNull } from 'drizzle-orm';
import { vibeCodingCommands } from '../src/commands/vibecoding-commands';
import { triggerVibeCodingBroadcast } from '../src/inngest/functions/vibecoding-broadcast';
import { logger, LogType } from '../src/utils/logger';

/**
 * üïâÔ∏è –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞—Å—Å—ã–ª–∫–∏
 */
async function testVibeCodingBroadcast() {
  console.log(
    'üïâÔ∏è –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ VibeCoding...\n'
  );

  const outputDir = join(process.cwd(), 'test-outputs', 'broadcast-test');
  await fs.mkdir(outputDir, { recursive: true });

  try {
    // üîç –®–∞–≥ 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
    console.log('1Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...');
    if (!db) {
      throw new Error('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞');
    }

    // –ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    await db.select().from(users).limit(1);
    console.log('   ‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ\n');

    // üë• –®–∞–≥ 2: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('2Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');
    const activeUsers = await db
      .select({
        telegram_id: users.telegram_id,
        username: users.username,
        first_name: users.first_name,
        language_code: users.language_code,
        notifications_enabled: userSettings.notifications_enabled,
      })
      .from(users)
      .leftJoin(userSettings, eq(users.id, userSettings.user_id))
      .where(
        and(
          isNotNull(users.telegram_id),
          or(
            isNull(userSettings.notifications_enabled), // –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ = –≤–∫–ª—é—á–µ–Ω–æ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
            eq(userSettings.notifications_enabled, true) // –∏–ª–∏ —è–≤–Ω–æ –≤–∫–ª—é—á–µ–Ω–æ
          )
        )
      );

    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${activeUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    if (activeUsers.length > 0) {
      console.log(`   üì± –ü—Ä–∏–º–µ—Ä—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:`);
      activeUsers.slice(0, 3).forEach((user, index) => {
        console.log(
          `      ${index + 1}. ${user.first_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (@${user.username || '–±–µ–∑ username'}) - ${user.telegram_id}`
        );
      });
    }
    console.log();

    // üé® –®–∞–≥ 3: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ä—É—Å–µ–ª–∏
    console.log('3Ô∏è‚É£ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤–æ–π –∫–∞—Ä—É—Å–µ–ª–∏...');
    const testThemes = [
      '–§–∏–ª–æ—Å–æ—Ñ–∏—è –∏–Ω—Ç—É–∏—Ç–∏–≤–Ω–æ–≥–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è',
      'Cursor AI —Ç–µ—Ö–Ω–∏–∫–∏ –∏ –ª—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏',
      '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞',
    ];

    const randomTheme =
      testThemes[Math.floor(Math.random() * testThemes.length)];
    const testStyles = ['minimalist', 'vibrant', 'dark', 'gradient'] as const;
    const randomStyle =
      testStyles[Math.floor(Math.random() * testStyles.length)];

    console.log(`   üéØ –í—ã–±—Ä–∞–Ω–Ω–∞—è —Ç–µ–º–∞: "${randomTheme}"`);
    console.log(`   üé® –í—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–∏–ª—å: "${randomStyle}"`);

    const carouselResult = await vibeCodingCommands.generateVibeCodingCarousel(
      randomTheme,
      {
        maxCards: 3, // –ú–µ–Ω—å—à–µ –∫–∞—Ä—Ç–æ—á–µ–∫ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        style: randomStyle,
        includeCodeExamples: true,
        categories: ['general', 'fundamentals', 'tools', 'practices'],
      }
    );

    if (!carouselResult.success) {
      throw new Error(`–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏: ${carouselResult.error}`);
    }

    console.log(`   ‚úÖ –ö–∞—Ä—É—Å–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!`);
    console.log(
      `   üñºÔ∏è  –°–æ–∑–¥–∞–Ω–æ ${carouselResult.carouselImages?.length || 0} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π`
    );
    console.log(
      `   üìÑ –°–æ–∑–¥–∞–Ω–æ ${carouselResult.carouselCards?.length || 0} –∫–∞—Ä—Ç–æ—á–µ–∫`
    );

    if (carouselResult.searchStats) {
      console.log(
        `   ‚è±Ô∏è  –í—Ä–µ–º—è –ø–æ–∏—Å–∫–∞: ${carouselResult.searchStats.queryTime}ms`
      );
    }
    console.log();

    // üíæ –®–∞–≥ 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    console.log('4Ô∏è‚É£ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...');
    if (carouselResult.carouselImages) {
      for (let i = 0; i < carouselResult.carouselImages.length; i++) {
        const imageData = carouselResult.carouselImages[i];
        const base64Data = imageData.replace(/^data:image\/png;base64,/, '');
        const fileName = `broadcast_test_${randomStyle}_card_${i + 1}.png`;
        const filePath = join(outputDir, fileName);

        try {
          await fs.writeFile(filePath, base64Data, 'base64');
          console.log(`   üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: ${fileName}`);
        } catch (saveError) {
          console.error(`   ‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è ${fileName}:`, saveError);
        }
      }
    }
    console.log();

    // üìä –®–∞–≥ 5: –î–µ—Ç–∞–ª–∏ –∫–∞—Ä—Ç–æ—á–µ–∫
    console.log('5Ô∏è‚É£ –î–µ—Ç–∞–ª–∏ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç–æ—á–µ–∫:');
    if (carouselResult.carouselCards) {
      carouselResult.carouselCards.forEach((card, index) => {
        console.log(`   üìÑ –ö–∞—Ä—Ç–æ—á–∫–∞ ${index + 1}: "${card.title}"`);
        console.log(`      üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è: ${card.category}`);
        console.log(`      üè∑Ô∏è  –¢–µ–≥–∏: ${card.tags.slice(0, 3).join(', ')}`);
        console.log(
          `      üìà –†–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç—å: ${Math.round(card.relevanceScore * 100)}%`
        );
        if (card.codeExamples && card.codeExamples.length > 0) {
          console.log(`      üíª –ü—Ä–∏–º–µ—Ä—ã –∫–æ–¥–∞: ${card.codeExamples.length} —à—Ç.`);
        }
        console.log();
      });
    }

    // üöÄ –®–∞–≥ 6: –¢–µ—Å—Ç —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Inngest (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    console.log('6Ô∏è‚É£ –¢–µ—Å—Ç —Ä—É—á–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —á–µ—Ä–µ–∑ Inngest...');
    console.log(
      '   ‚ö†Ô∏è  –í–Ω–∏–º–∞–Ω–∏–µ: –≠—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç —Ä–µ–∞–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!'
    );
    console.log(
      '   ‚ÑπÔ∏è  –î–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏, —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ –ø—Ä–æ–ø—É—â–µ–Ω –≤ —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ.'
    );
    console.log(
      '   üí° –î–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: await triggerVibeCodingBroadcast()'
    );
    console.log();

    // –í–º–µ—Å—Ç–æ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞, –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞
    console.log(
      '   üìã –§—É–Ω–∫—Ü–∏—è triggerVibeCodingBroadcast –¥–æ—Å—Ç—É–ø–Ω–∞:',
      typeof triggerVibeCodingBroadcast === 'function'
    );
    console.log();

    // üìà –®–∞–≥ 7: –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    console.log('7Ô∏è‚É£ –ò—Ç–æ–≥–æ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ç–µ—Å—Ç–∞:');
    console.log(`   üë• –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: ${activeUsers.length}`);
    console.log(`   üé® –¢–µ–º–∞: ${randomTheme}`);
    console.log(`   üé≠ –°—Ç–∏–ª—å: ${randomStyle}`);
    console.log(
      `   üñºÔ∏è  –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å–æ–∑–¥–∞–Ω–æ: ${carouselResult.carouselImages?.length || 0}`
    );
    console.log(
      `   üìÑ –ö–∞—Ä—Ç–æ—á–µ–∫ —Å–æ–∑–¥–∞–Ω–æ: ${carouselResult.carouselCards?.length || 0}`
    );
    console.log(`   üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤: ${outputDir}`);
    console.log();

    console.log(
      'üéâ –¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ VibeCoding –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!'
    );
    console.log('üïâÔ∏è –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞–±–æ—Ç–µ –∫–∞–∂–¥—ã–π —á–∞—Å.');
  } catch (error) {
    console.error('\nüí• –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Å–∏—Å—Ç–µ–º—ã —Ä–∞—Å—Å—ã–ª–∫–∏:', error);

    logger.error('Broadcast test failed', {
      error: error instanceof Error ? error : new Error(String(error)),
      type: LogType.ERROR,
    });

    process.exit(1);
  }
}

/**
 * üîß –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤, –µ—Å–ª–∏ —Å–∫—Ä–∏–ø—Ç –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
 */
if (import.meta.main) {
  testVibeCodingBroadcast()
    .then(() => {
      console.log(
        '\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ. –î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ –ø–æ—Ç–æ–∫–µ VibeCoding! üïâÔ∏è'
      );
      process.exit(0);
    })
    .catch(error => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤:', error);
      process.exit(1);
    });
}
