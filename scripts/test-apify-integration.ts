#!/usr/bin/env bun

/**
 * üïâÔ∏è VibeCoding Apify Integration Test
 *
 * –¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—é Apify API –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤–µ–±-–ø–æ–∏—Å–∫–∞
 * —á–µ—Ä–µ–∑ VibeCoding Research Agent
 */

import { logger, LogType } from '../src/utils/logger';
import { VibeCodingResearchAgent } from '../src/agents/vibecoding-research-agent';

async function testApifyIntegration() {
  console.log('üïâÔ∏è === VibeCoding Apify Integration Test ===\n');

  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ APIFY_TOKEN
    const apifyToken = process.env.APIFY_TOKEN;
    console.log(`üîë APIFY_TOKEN: ${apifyToken ? '‚úÖ –ù–∞–π–¥–µ–Ω' : '‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω'}`);

    if (!apifyToken) {
      console.log(
        '‚ö†Ô∏è –î–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞ –¥–æ–±–∞–≤—å—Ç–µ APIFY_TOKEN –≤ .env —Ñ–∞–π–ª'
      );
      console.log('üí° –¢–µ—Å—Ç –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å fallback –¥–∞–Ω–Ω—ã–µ\n');
    }

    // –°–æ–∑–¥–∞–µ–º Research Agent
    const researchAgent = new VibeCodingResearchAgent();
    console.log('‚úÖ VibeCoding Research Agent —Å–æ–∑–¥–∞–Ω\n');

    // –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã
    const testQueries = [
      '–º–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
      'AI –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞ 2025',
      '—Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Ç–æ–∫–∞ coding',
    ];

    for (const [index, query] of testQueries.entries()) {
      console.log(`\nüîç === –¢–µ—Å—Ç ${index + 1}: "${query}" ===`);

      const startTime = Date.now();

      try {
        console.log('‚è≥ –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ...');

        // –í—ã–ø–æ–ª–Ω—è–µ–º –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ Research Agent (–∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Apify)
        const result = await researchAgent.researchTopic(query, 'basic');

        const duration = Date.now() - startTime;

        console.log(`‚ö° –ó–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${duration}ms`);
        console.log('\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è:');
        console.log(`   üìù –†–µ–∑—é–º–µ: ${result.summary.slice(0, 150)}...`);
        console.log(`   üí° –ò–Ω—Å–∞–π—Ç–æ–≤: ${result.keyInsights.length}`);
        console.log(`   üî• –¢—Ä–µ–Ω–¥–æ–≤: ${result.trends.length}`);
        console.log(`   üöÄ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π: ${result.recommendations.length}`);
        console.log(`   üìö –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: ${result.sources.length}`);
        console.log(`   üéØ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å: ${result.confidenceLevel}/10`);

        if (result.sources.length > 0) {
          console.log('\nüìñ –ü—Ä–∏–º–µ—Ä—ã –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤:');
          result.sources.slice(0, 2).forEach((source, i) => {
            console.log(`   ${i + 1}. ${source.title}`);
            console.log(`      ${source.url}`);
            console.log(`      "${source.snippet?.slice(0, 100)}..."`);
          });
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞—á–µ—Å—Ç–≤–æ –¥–∞–Ω–Ω—ã—Ö
        const hasRealData = result.sources.some(
          source => source.url && !source.url.includes('example.com')
        );

        console.log(
          `\nüéØ –°—Ç–∞—Ç—É—Å –¥–∞–Ω–Ω—ã—Ö: ${hasRealData ? 'üåê –†–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ Apify' : 'üé≠ Fallback –¥–∞–Ω–Ω—ã–µ'}`
        );
      } catch (error) {
        console.error(
          `‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ ${index + 1}:`,
          error instanceof Error ? error.message : error
        );
      }

      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏
      if (index < testQueries.length - 1) {
        console.log('\n‚è≥ –ü–∞—É–∑–∞ 3 —Å–µ–∫—É–Ω–¥—ã –º–µ–∂–¥—É —Ç–µ—Å—Ç–∞–º–∏...');
        await new Promise(resolve => setTimeout(resolve, 3000));
      }
    }

    console.log('\nüéâ === –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ ===');
    console.log('\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏:');
    console.log(`   üîë APIFY_TOKEN: ${apifyToken ? '–ê–∫—Ç–∏–≤–µ–Ω' : '–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`);
    console.log(`   ü§ñ Research Agent: –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ`);
    console.log(
      `   üåê –í–µ–±-–ø–æ–∏—Å–∫: ${apifyToken ? 'Apify Google Search' : 'Fallback —Ä–µ–∂–∏–º'}`
    );
    console.log(`   üïâÔ∏è VibeCoding —Ñ–∏–ª–æ—Å–æ—Ñ–∏—è: –ò–Ω—Ç–µ–≥—Ä–∏—Ä–æ–≤–∞–Ω–∞`);

    if (apifyToken) {
      console.log('\n‚úÖ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ production –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é!');
      console.log(
        'üöÄ Broadcast –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞'
      );
    } else {
      console.log('\nüí° –î–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–æ–∏—Å–∫–∞:');
      console.log('   1. –î–æ–±–∞–≤—å—Ç–µ APIFY_TOKEN –≤ .env —Ñ–∞–π–ª');
      console.log('   2. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
      console.log('   3. –°–∏—Å—Ç–µ–º–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—Å—è –Ω–∞ Apify API');
    }
  } catch (error) {
    console.error('üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:', error);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testApifyIntegration().catch(console.error);
