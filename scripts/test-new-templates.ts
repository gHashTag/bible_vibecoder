#!/usr/bin/env bun

/**
 * üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö luxury —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤
 *
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –≤—Å–µ—Ö –Ω–æ–≤—ã—Ö —à–∞–±–ª–æ–Ω–æ–≤ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
 */

import { CarouselContentGeneratorService } from '../src/services/carousel-content-generator.service';
import {
  InstagramCanvasService,
  ColorTemplate,
} from '../src/services/instagram-canvas.service';
import { VibeCodingContentService } from '../src/services/vibecoding-content.service';
import { promises as fs } from 'fs';
import path from 'path';

const contentGenerator = new CarouselContentGeneratorService();
const canvasService = new InstagramCanvasService();
const vibeContentService = new VibeCodingContentService();

async function testNewTemplates() {
  console.log('üé® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö luxury —Ü–≤–µ—Ç–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤...\n');

  const topic = 'Clean Code Principles';

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç –æ–¥–∏–Ω —Ä–∞–∑
  console.log('üìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ç–µ–Ω—Ç —Å–ª–∞–π–¥–æ–≤...');
  const slides = await contentGenerator.generateCarouselSlides(topic);
  console.log(`‚úÖ –°–æ–∑–¥–∞–Ω–æ ${slides.length} —Å–ª–∞–π–¥–æ–≤\n`);

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Instagram —Ç–µ–∫—Å—Ç
  console.log('üì± –ì–µ–Ω–µ—Ä–∏—Ä—É—é Instagram —Ç–µ–∫—Å—Ç...');
  const instagramText = vibeContentService.generateInstagramPost(topic, slides);
  console.log('‚úÖ Instagram —Ç–µ–∫—Å—Ç —Å–æ–∑–¥–∞–Ω\n');

  // –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ —Ç–µ–º–ø–ª–µ–π—Ç—ã
  const templates = InstagramCanvasService.getColorTemplates();
  const newTemplates = [
    ColorTemplate.BLACK_GOLD,
    ColorTemplate.EMERALD_LUXURY,
    ColorTemplate.ROYAL_PURPLE,
    ColorTemplate.PLATINUM_SILVER,
    ColorTemplate.BURGUNDY_GOLD,
    ColorTemplate.MIDNIGHT_BLUE,
    ColorTemplate.COPPER_BRONZE,
    ColorTemplate.FOREST_GOLD,
    ColorTemplate.ROSE_GOLD,
    ColorTemplate.CHARCOAL_MINT,
  ];

  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const outputDir = path.join(process.cwd(), 'test-outputs', 'new-templates');
  await fs.mkdir(outputDir, { recursive: true });

  console.log('üé® –ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ–±—Ä–∞–∑—Ü—ã –Ω–æ–≤—ã—Ö —Ç–µ–º–ø–ª–µ–π—Ç–æ–≤:\n');

  for (const template of newTemplates) {
    const templateInfo = templates[template];
    console.log(`üé® –°–æ–∑–¥–∞—é ${templateInfo.emoji} ${templateInfo.name}...`);

    try {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
      const firstSlide = slides[0];
      const imagePath = await canvasService.generateCarouselImageFiles(
        [firstSlide],
        `${outputDir}/${template}_sample`,
        template
      );

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
      const stats = await fs.stat(imagePath[0]);
      const sizeKB = Math.round(stats.size / 1024);

      console.log(`  ‚úÖ ${templateInfo.name}: ${sizeKB} KB`);
    } catch (error) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞ –≤ ${templateInfo.name}:`, error);
    }
  }

  // –°–æ—Ö—Ä–∞–Ω—è–µ–º Instagram —Ç–µ–∫—Å—Ç
  const textPath = path.join(outputDir, 'instagram-text.txt');
  await fs.writeFile(textPath, instagramText, 'utf-8');
  console.log(`\nüì± Instagram —Ç–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: ${textPath}`);

  console.log('\nüéâ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!');
  console.log(`üìÅ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ –ø–∞–ø–∫–µ: ${outputDir}`);
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testNewTemplates().catch(console.error);
