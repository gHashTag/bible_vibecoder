const { Inngest } = require('inngest');

// –°–æ–∑–¥–∞–µ–º Inngest –∫–ª–∏–µ–Ω—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const inngest = new Inngest({
  id: 'test-client',
  isDev: true,
});

async function testCarousel() {
  console.log('üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—É—Å–µ–ª–∏...');

  try {
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –∫–∞—Ä—É—Å–µ–ª–∏
    const result = await inngest.send({
      name: 'carousel/generate.requested',
      data: {
        userId: 'test_user_123',
        chatId: 'test_chat_123',
        messageId: 'test_msg_123',
        topic: 'VIBECODING –ø—Ä–∏–Ω—Ü–∏–ø—ã',
        slidesCount: 5,
        timestamp: new Date(),
      },
    });

    console.log('‚úÖ –°–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ:', result);
    console.log('üîÑ –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ Inngest –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–±—ã—Ç–∏—è');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–±—ã—Ç–∏—è:', error.message);
  }
}

testCarousel();
