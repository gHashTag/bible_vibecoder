import { InstagramCanvasService } from '../src/services/instagram-canvas.service';
import { CarouselSlide } from '../src/types';
import fs from 'fs';
import path from 'path';

async function testImageGeneration() {
  console.log('üé® –¢–ï–°–¢: –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è Instagram...');

  try {
    // –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    const canvasService = new InstagramCanvasService();

    // –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å–ª–∞–π–¥
    const testSlide: CarouselSlide = {
      type: 'title',
      title: 'üöÄ VIBECODING',
      content:
        'üßò‚Äç‚ôÇÔ∏è –ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ\n\n‚ö° –û—Å–æ–∑–Ω–∞–Ω–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ –∫–æ–¥—É\n\nüéØ –ü—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞',
      order: 1,
    };

    console.log('üìù –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π —Å–ª–∞–π–¥:', testSlide.title);

    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    console.log('üñºÔ∏è –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ 1080x1350...');
    const imageBuffers = await canvasService.generateCarouselImages([
      testSlide,
    ]);

    if (imageBuffers && imageBuffers.length > 0) {
      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
      const outputPath = path.join(process.cwd(), 'test-output');
      if (!fs.existsSync(outputPath)) {
        fs.mkdirSync(outputPath, { recursive: true });
      }

      const imagePath = path.join(outputPath, 'test-vibecoding-slide.png');
      fs.writeFileSync(imagePath, imageBuffers[0]);

      const stats = fs.statSync(imagePath);

      console.log('‚úÖ –£–°–ü–ï–•! –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–Ω–æ:');
      console.log(`üìÅ –ü—É—Ç—å: ${imagePath}`);
      console.log(`üìä –†–∞–∑–º–µ—Ä: ${(stats.size / 1024).toFixed(2)} KB`);
      console.log(`üé® –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ: 1080x1350 (Instagram Story)`);
      console.log('\nüöÄ –¢–ï–•–ù–û–õ–û–ì–ò–Ø –†–ê–ë–û–¢–ê–ï–¢! –ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∫–∞—Ä—É—Å–µ–ª–∏!');
    } else {
      console.error('‚ùå –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–µ —Å–æ–∑–¥–∞–Ω–æ - –ø—É—Å—Ç–æ–π –±—É—Ñ–µ—Ä');
    }
  } catch (error) {
    console.error('‚ùå –û–®–ò–ë–ö–ê –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
    console.error(error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testImageGeneration();
