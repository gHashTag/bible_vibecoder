#!/usr/bin/env bun

/**
 * üßò‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö VibeCoding —Å—Ç–∏–ª–µ–π
 *
 * –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ–±—Ä–∞–∑—Ü—ã –∫–∞—Ä—Ç–æ—á–µ–∫ —Å –Ω–æ–≤—ã–º–∏ —Å—Ç–∏–ª—è–º–∏:
 * - Night Flow (–ù–æ—á–Ω–æ–π –ø–æ—Ç–æ–∫)
 * - Wave Technique (–í–æ–ª–Ω–æ–≤–∞—è —Ç–µ—Ö–Ω–∏–∫–∞)
 * - Code Matrix (–ö–æ–¥ –ú–∞—Ç—Ä–∏—Ü–∞)
 * - Code Perspective (–ö–æ–¥ –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–∞)
 * - Code Hologram (–ö–æ–¥ –ì–æ–ª–æ–≥—Ä–∞–º–º–∞)
 */

import {
  InstagramCanvasService,
  ColorTemplate,
} from '../src/services/instagram-canvas.service';
import type { CarouselSlide } from '../src/types';
import { logger, LogType } from '../src/utils/logger';
import fs from 'fs/promises';
import path from 'path';

const canvasService = new InstagramCanvasService();

// üßò‚Äç‚ôÇÔ∏è –¢–µ—Å—Ç–æ–≤—ã–µ —Å–ª–∞–π–¥—ã
const testSlides: CarouselSlide[] = [
  {
    order: 1,
    type: 'title',
    title: 'üßò‚Äç‚ôÇÔ∏è VibeCoding',
    content: '–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏–µ',
  },
  {
    order: 2,
    type: 'principle',
    title: 'üíª –ö–æ–¥ –∫–∞–∫ –∏—Å–∫—É—Å—Å—Ç–≤–æ',
    content:
      '–ö–∞–∂–¥–∞—è —Å—Ç—Ä–æ–∫–∞ –∫–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω–∞ —Å –ø–æ–ª–Ω—ã–º –ø–æ–Ω–∏–º–∞–Ω–∏–µ–º –µ—ë —Ü–µ–ª–∏ –∏ –º–µ—Å—Ç–∞ –≤ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞.',
  },
];

// üé® –ù–æ–≤—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const newStyles = [
  ColorTemplate.NIGHT_FLOW,
  ColorTemplate.WAVE_TECHNIQUE,
  ColorTemplate.CODE_MATRIX,
  ColorTemplate.CODE_PERSPECTIVE,
  ColorTemplate.CODE_HOLOGRAM,
];

async function generateNewStyleSamples() {
  logger.info('üé® –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ–±—Ä–∞–∑—Ü–æ–≤ –Ω–æ–≤—ã—Ö VibeCoding —Å—Ç–∏–ª–µ–π', {
    type: LogType.BUSINESS_LOGIC,
    data: { stylesCount: newStyles.length },
  });

  // –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
  const outputDir = path.resolve('./test-outputs/new-vibecoding-styles');
  await fs.mkdir(outputDir, { recursive: true });

  for (const style of newStyles) {
    try {
      logger.info(`üé® –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–∑—Ü—ã –¥–ª—è —Å—Ç–∏–ª—è: ${style}`, {
        type: LogType.BUSINESS_LOGIC,
        data: { style },
      });

      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const images = await canvasService.generateCarouselImages(
        testSlides,
        undefined,
        style
      );

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      for (let i = 0; i < images.length; i++) {
        const filename = `${style}_slide_${i + 1}.png`;
        const filepath = path.join(outputDir, filename);
        await fs.writeFile(filepath, images[i]);

        logger.info(`‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω –æ–±—Ä–∞–∑–µ—Ü: ${filename}`, {
          type: LogType.BUSINESS_LOGIC,
          data: { filepath, size: images[i].length },
        });
      }
    } catch (error) {
      logger.error(`‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∏–ª—è ${style}`, {
        type: LogType.ERROR,
        error: error instanceof Error ? error : new Error(String(error)),
        data: { style },
      });
    }
  }

  logger.info('üéâ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–±—Ä–∞–∑—Ü–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞', {
    type: LogType.BUSINESS_LOGIC,
    data: { outputDir },
  });
}

// üöÄ –ó–∞–ø—É—Å–∫
generateNewStyleSamples()
  .then(() => {
    console.log('‚úÖ –í—Å–µ –æ–±—Ä–∞–∑—Ü—ã —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!');
    process.exit(0);
  })
  .catch(error => {
    console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:', error);
    process.exit(1);
  });
