#!/usr/bin/env bun

import { Telegraf } from 'telegraf';
import { Pool } from 'pg';

const bot = new Telegraf(process.env.BOT_TOKEN || '');
const pool = new Pool({
  connectionString:
    process.env.DATABASE_URL ||
    'postgresql://neondb_owner:npg_jwz8kFs0XVTe@ep-shy-truth-a5hat2dz-pooler.us-east-2.aws.neon.tech/neondb?sslmode=require',
});

console.log('üöÄ –†–ï–ê–õ–¨–ù–´–ô —Ç–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ VibeCoding —Å–æ–æ–±—â–µ–Ω–∏–π...');

async function testRealBroadcast() {
  const client = await pool.connect();

  try {
    // 1Ô∏è‚É£ –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    console.log('1Ô∏è‚É£ –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...');

    const result = await client.query(`
      SELECT 
        u.id, 
        u.telegram_id, 
        u.username, 
        u.first_name,
        COALESCE(us.notifications_enabled, true) as notifications_enabled
      FROM users u
      LEFT JOIN user_settings us ON u.id = us.user_id
      WHERE u.telegram_id IS NOT NULL
        AND (us.notifications_enabled IS NULL OR us.notifications_enabled = true)
      ORDER BY u.created_at DESC;
    `);

    const activeUsers = result.rows;

    console.log(`   ‚úÖ –ù–∞–π–¥–µ–Ω–æ ${activeUsers.length} –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π`);
    activeUsers.forEach((user, index) => {
      console.log(
        `      ${index + 1}. ${user.first_name || '–ë–µ–∑ –∏–º–µ–Ω–∏'} (@${user.username || '–±–µ–∑ username'}) - ${user.telegram_id}`
      );
    });

    if (activeUsers.length === 0) {
      console.log('‚ùå –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏');
      return;
    }

    // 2Ô∏è‚É£ –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–µ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    console.log('\n2Ô∏è‚É£ –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è...');

    const testMessage = `üïâÔ∏è **–¢–µ—Å—Ç —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ VibeCoding**

üìö –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏.

üéØ **–°–µ–≥–æ–¥–Ω—è—à–Ω—è—è –º—É–¥—Ä–æ—Å—Ç—å:** "–î–æ–≤–µ—Ä–∏–µ –ò–ò - —ç—Ç–æ –Ω–µ —Å–ª–µ–ø–∞—è –≤–µ—Ä–∞, –∞ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ–µ –ø–∞—Ä—Ç–Ω–µ—Ä—Å—Ç–≤–æ –≤ –∫–æ–¥–µ"

‚è∞ –í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏: ${new Date().toLocaleString('ru-RU', { timeZone: 'Europe/Moscow' })}

#VibeCoding #–¢–µ—Å—Ç–†–∞—Å—Å—ã–ª–∫–∏ #–ú–µ–¥–∏—Ç–∞—Ç–∏–≤–Ω–æ–µ–ö–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ`;

    console.log('   ‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ');

    // 3Ô∏è‚É£ –†–ï–ê–õ–¨–ù–ê–Ø –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
    console.log('\n3Ô∏è‚É£ üö® –ù–ê–ß–ò–ù–ê–ï–ú –†–ï–ê–õ–¨–ù–£–Æ –û–¢–ü–†–ê–í–ö–£ –°–û–û–ë–©–ï–ù–ò–ô...');

    let successCount = 0;
    let errorCount = 0;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ—Ä—Ü–∏—è–º–∏
    const BATCH_SIZE = 5;
    const batches = [];

    for (let i = 0; i < activeUsers.length; i += BATCH_SIZE) {
      batches.push(activeUsers.slice(i, i + BATCH_SIZE));
    }

    for (const batch of batches) {
      console.log(`\nüì§ –û—Ç–ø—Ä–∞–≤–∫–∞ –±–∞—Ç—á–∞ –∏–∑ ${batch.length} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π...`);

      await Promise.allSettled(
        batch.map(async user => {
          try {
            await bot.telegram.sendMessage(user.telegram_id, testMessage, {
              parse_mode: 'Markdown',
              disable_web_page_preview: true,
            });

            successCount++;
            console.log(
              `   ‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ ${user.first_name} (@${user.username || '–±–µ–∑ username'})`
            );

            // –õ–æ–≥–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—É—é –æ—Ç–ø—Ä–∞–≤–∫—É
          } catch (error) {
            errorCount++;
            console.error(`   ‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ ${user.first_name}:`, error);

            // –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏
          }
        })
      );

      // –ü–∞—É–∑–∞ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏ –¥–ª—è —Å–æ–±–ª—é–¥–µ–Ω–∏—è rate limits
      if (batches.length > 1) {
        await new Promise(resolve => setTimeout(resolve, 2000));
        console.log('   ‚è≥ –ü–∞—É–∑–∞ 2 —Å–µ–∫ –º–µ–∂–¥—É –±–∞—Ç—á–∞–º–∏...');
      }
    }

    // 4Ô∏è‚É£ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    console.log('\n4Ô∏è‚É£ üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –†–ï–ê–õ–¨–ù–û–ô –û–¢–ü–†–ê–í–ö–ò:');
    console.log(`   ‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: ${successCount}`);
    console.log(`   ‚ùå –û—à–∏–±–æ–∫: ${errorCount}`);
    console.log(
      `   üìà –£—Å–ø–µ—à–Ω–æ—Å—Ç—å: ${((successCount / activeUsers.length) * 100).toFixed(1)}%`
    );

    if (successCount > 0) {
      console.log('\nüéâ –û–¢–õ–ò–ß–ù–û! –°–∏—Å—Ç–µ–º–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!');
      console.log(
        'üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π Telegram - –¥–æ–ª–∂–Ω–æ –ø—Ä–∏–π—Ç–∏ —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ'
      );
    } else {
      console.log('\n‚ö†Ô∏è –ù–∏ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ');
    }
  } catch (error) {
    console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
    process.exit(1);
  } finally {
    client.release();
    await pool.end();
  }
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∞
if (import.meta.main) {
  testRealBroadcast()
    .then(() => {
      console.log('\n‚ú® –†–ï–ê–õ–¨–ù–´–ô —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ Telegram! üïâÔ∏è');
      process.exit(0);
    })
    .catch(error => {
      console.error('\nüí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', error);
      process.exit(1);
    });
}
